(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 14.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    325643,       6403]
NotebookOptionsPosition[    324607,       6372]
NotebookOutlinePosition[    325454,       6401]
CellTagsIndexPosition[    325411,       6398]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["DSolve[y'[x] == y[x]/(x + y[x]^4), y[x], x]", "WolframAlphaLong",
 CellChangeTimes->{{3.917854746848151*^9, 3.917854772892123*^9}, {
  3.9178548062151375`*^9, 3.9178548852761726`*^9}, {3.917854931056431*^9, 
  3.917855059707123*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"e42f53fe-e5ae-7b4b-a303-c595a13de158"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = 
   "DSolve[y'[x] == y[x]/(x + y[x]^4), y[x], x]", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}, 
    PodStates -> {
     "Solution__Step-by-step solution", "Solution__Step-by-step solution", 
      "Solution__Approximate forms", "Solution__Exact forms"}}, 
   Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[y'[x] == y[x]/(x + y[x]^4), y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             RowBox[{
               TagBox[
                StyleBox["DSolve", FontFamily -> "Roboto", FontSize -> 13], 
                HoldForm], "[", 
               RowBox[{
                 RowBox[{
                   RowBox[{
                    SuperscriptBox[
                    "y", "\[Prime]", MultilineFunction -> None], "(", "x", 
                    ")"}], "\[LongEqual]", 
                   TagBox[
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    RowBox[{"x", "+", 
                    SuperscriptBox[
                    RowBox[{"y", "(", "x", ")"}], "4"]}]], Identity]}], ",", 
                 RowBox[{"y", "(", "x", ")"}], ",", "x"}], "]"}], 
             PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "ODE classification", "scanner" -> "ODE", "id" -> 
     "ODEClassification", "position" -> "200", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
           "\"first\[Hyphen]order nonlinear ordinary differential equation\"",
             TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Differential equation solutions", "scanner" -> "ODE", 
     "id" -> "Solution", "position" -> "100", "error" -> "false", 
     "numsubpods" -> "5", "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y'[x] == y[x]/(x + y[x]^4)}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]}], "-", 
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]], "-", 
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"6", " ", 
                    SubscriptBox["c", "1"]}], 
                    SqrtBox[
                    RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]]}]]}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y'[x] == y[x]/(x + y[x]^4)}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]}], "+", 
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]], "-", 
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"6", " ", 
                    SubscriptBox["c", "1"]}], 
                    SqrtBox[
                    RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]]}]]}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y'[x] == y[x]/(x + y[x]^4)}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{"-", 
                  RowBox[{
                    RowBox[{
                    FractionBox["1", "2"]}], " ", 
                    SqrtBox[
                    RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]}]}], "-", 
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]], "-", 
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "+", 
                    FractionBox[
                    RowBox[{"6", " ", 
                    SubscriptBox["c", "1"]}], 
                    SqrtBox[
                    RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]]}]]}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {"DSolve[{y'[x] == y[x]/(x + y[x]^4)}, y[x], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{"y", "(", "x", ")"}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]], "-", 
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "+", 
                    FractionBox[
                    RowBox[{"6", " ", 
                    SubscriptBox["c", "1"]}], 
                    SqrtBox[
                    RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]]}]]}], "-", 
                RowBox[{
                  FractionBox["1", "2"], " ", 
                  SqrtBox[
                   RowBox[{
                    FractionBox[
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"], 
                    RadicalBox["2", "3"]], "-", 
                    FractionBox[
                    RowBox[{"4", " ", 
                    RadicalBox["2", "3"], " ", "x"}], 
                    RadicalBox[
                    RowBox[{
                    RowBox[{"9", " ", 
                    SubsuperscriptBox["c", "1", "2"]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"81", " ", 
                    SubsuperscriptBox["c", "1", "4"]}], "+", 
                    RowBox[{"256", " ", 
                    SuperscriptBox["x", "3"]}]}]]}], "3"]]}]]}]}]}], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["subpod", {"title" -> "Possible intermediate steps"}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                Cell[
                 TextData[{
                   StyleBox["Solve ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                   StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox[
                    RowBox[{"y", "(", "x", ")"}], "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True]], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                   StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Rewrite the equation:", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox[
                    RowBox[{"y", "(", "x", ")"}], 
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox[
                    RowBox[{"y", "(", "x", ")"}], "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True]]}], "+", 
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True]}], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[LongEqual]", "0"}]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Multiply both sides by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox["y", "4"]}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox["\[NoBreak]", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", "y"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox["y", "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], ")"}], " ", 
                    RowBox[{
                    SuperscriptBox[
                    "y", "\[Prime]", MultilineFunction -> None], "(", "x", 
                    ")"}]}]}], HoldForm], AutoMultiplicationSymbol -> True], 
                    StyleBox[
                    "\"\[LongEqual]\"", FontColor -> GrayLevel[0.7], 
                    StripOnInput -> False], "0"}, "RowDefault"]}, 
                    "RowDefault"], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Let ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"R", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    " \[LongEqual] ", FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", "y"}], TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" and ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"S", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    " \[LongEqual] ", FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox["y", "4"]}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[".", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    Cell[
                    TextData[{
                    StyleBox["This is not an exact equation, because ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"R", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[LongEqual]", 
                    RowBox[{"-", "1"}]}], ")"}], "\[NotEqual]", 
                    RowBox[{"(", 
                    RowBox[{"1", "\[LongEqual]", 
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"S", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True]}], ")"}]}], 
                    TraditionalForm]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[".", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    Cell[
                    TextData[{
                    StyleBox["Find an integrating factor ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "y", ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" such that ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"R", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], " ", 
                    RowBox[{"\[Mu]", "(", "y", ")"}]}], "+", 
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True], " ", 
                    RowBox[{"S", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], " ", 
                    RowBox[{"\[Mu]", "(", "y", ")"}]}]}], TraditionalForm]]], 
                    AutoMultiplicationSymbol -> True], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["0", TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" is exact.", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    Cell[
                    TextData[{
                    StyleBox["This means ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Mu]", "(", "y", ")"}], " ", 
                    RowBox[{"R", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], ")"}]}], 
                    TraditionalForm]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    " \[LongEqual] ", FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"\[Mu]", "(", "y", ")"}], " ", 
                    RowBox[{"S", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], ")"}]}], 
                    TraditionalForm]]], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"y", " ", 
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"\[Mu]", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True]}], 
                    ")"}]}], "-", 
                    RowBox[{"\[Mu]", "(", "y", ")"}]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{"\[Mu]", "(", "y", ")"}]}, "RowDefault"], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Isolate ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", "y", ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" to the left\[Hyphen]hand side:", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    FractionBox[
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"\[Mu]", "(", "y", ")"}]}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    RowBox[{"\[Mu]", "(", "y", ")"}]], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    RowBox[{"-", 
                    FractionBox["2", "y"]}]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Integrate both sides with respect to ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["y", TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"log", "(", 
                    RowBox[{"\[Mu]", "(", "y", ")"}], ")"}], "\[LongEqual]", 
                    RowBox[{"-", "2", " ", 
                    RowBox[{"log", "(", "y", ")"}]}]}]}, "RowDefault"], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Take exponentials of both sides:", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    RowBox[{"\[Mu]", "(", "y", ")"}], "\" \""}, "RowDefault"],
                     "\"\[LongEqual] \"", 
                    FractionBox["1", 
                    SuperscriptBox["y", "2"]]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Multiply both sides of ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"y", "(", "x", ")"}]}], "+", 
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True], " ", 
                    RowBox[{"(", 
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox[
                    RowBox[{"y", "(", "x", ")"}], "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], ")"}]}]}], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["0", TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" by ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"\[Mu]", "(", 
                    RowBox[{"y", "(", "x", ")"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", 
                    RowBox[{"y", "(", "x", ")"}]]}], "+", 
                    FractionBox[
                    RowBox[{
                    RowBox[{"(", 
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox[
                    RowBox[{"y", "(", "x", ")"}], "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], ")"}], " ", 
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"y", "(", "x", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "x"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True]}], 
                    SuperscriptBox[
                    RowBox[{"y", "(", "x", ")"}], "2"]]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", "0"}, "RowDefault"], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    TagBox[
                    GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Let ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"P", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"-", 
                    FractionBox["1", "y"]}], TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" and ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"Q", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox["y", "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], 
                    SuperscriptBox["y", "2"]], TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[".", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    Cell[
                    TextData[{
                    StyleBox["This is an exact equation, because ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"P", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    " \[LongEqual] ", FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox["1", 
                    SuperscriptBox["y", "2"]], TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    " \[LongEqual] ", FontColor -> GrayLevel[0], StripOnInput -> 
                    False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"Q", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[".", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    Cell[
                    TextData[{
                    StyleBox["Define ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" such that ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"P", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" and ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"Q", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[".", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{0.5}}}], 
                    "Column"]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    "\"Then, the solution will be given by \"", FontColor -> 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox[
                    RowBox[{
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], "\[LongEqual]", 
                    SubscriptBox["c", "1"]}], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    "\", where \"", FontColor -> GrayLevel[0.7], StripOnInput -> 
                    False], 
                    StyleBox[
                    SubscriptBox["c", "1"], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    "\" is an arbitrary constant.\"", FontColor -> 
                    GrayLevel[0.7], StripOnInput -> False]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Integrate ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "x"}], MultilineFunction -> None], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with respect to ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["x", TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" in order to find ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], FontColor -> GrayLevel[0],
                     StripOnInput -> False], 
                    StyleBox[
                    "\" \[LongEqual] \"", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["1", "y"]}], 
                    RowBox[{"\[DifferentialD]", "x"}]}]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    "\" \[LongEqual] \"", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["x", "y"]}], "+", 
                    RowBox[{"g", "(", "y", ")"}]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], FontColor -> 
                    GrayLevel[0], StripOnInput -> False]}, "RowDefault"], 
                    StyleBox[
                    "\" where \"", FontColor -> GrayLevel[0.7], StripOnInput -> 
                    False], 
                    StyleBox[
                    RowBox[{"g", "(", "y", ")"}], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    "\" is an arbitrary function of \"", FontColor -> 
                    GrayLevel[0.7], StripOnInput -> False], 
                    StyleBox[
                    "y", FontColor -> GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    "\".\"", FontColor -> GrayLevel[0.7], StripOnInput -> 
                    False]}, "RowDefault"]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Differentiate ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with respect to ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["y", TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" in order to find ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"g", "(", "y", ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", "\"\""}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[InvisibleApplication]", 
                    RowBox[{"(", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    RowBox[{"-", 
                    FractionBox["x", "y"]}], "+", 
                    RowBox[{"g", "(", "y", ")"}]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], ")"}]}], "\" \""}, 
                    "RowDefault"], "\"\[LongEqual] \"", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    FractionBox["x", 
                    SuperscriptBox["y", "2"]], "+", 
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"g", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True]}], 
                    HoldForm], AutoMultiplicationSymbol -> True]}, 
                    "RowDefault"], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Substitute into ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[PartialD]", 
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}]}], 
                    RowBox[{"\[PartialD]", "y"}], MultilineFunction -> None], 
                    TraditionalForm]]], AutoMultiplicationSymbol -> True], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"Q", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    FractionBox["x", 
                    SuperscriptBox["y", "2"]], "+", 
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"g", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True]}], 
                    HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[LongEqual]", 
                    FractionBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"x", "+", 
                    SuperscriptBox["y", "4"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], 
                    SuperscriptBox["y", "2"]]}]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Solve for ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"g", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                    None], TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"g", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                    None], HoldForm], AutoMultiplicationSymbol -> True], 
                    "\[LongEqual]", 
                    SuperscriptBox["y", "2"]}]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Integrate ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    FractionBox[
                    RowBox[{"\[DifferentialD]", 
                    RowBox[{"g", "(", "y", ")"}]}], 
                    RowBox[{"\[DifferentialD]", "y"}], MultilineFunction -> 
                    None], TraditionalForm]]], AutoMultiplicationSymbol -> 
                    True], FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" with respect to ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox["y", TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    TemplateBox[{
                    TemplateBox[{
                    StyleBox[
                    RowBox[{"g", "(", "y", ")"}], FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    "\" \[LongEqual] \"", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    TagBox[
                    RowBox[{"\[Integral]", 
                    RowBox[{
                    SuperscriptBox["y", "2"], 
                    RowBox[{"\[DifferentialD]", "y"}]}]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    StyleBox[
                    "\" \[LongEqual] \"", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    StyleBox[
                    FractionBox[
                    SuperscriptBox["y", "3"], "3"], FontColor -> GrayLevel[0],
                     StripOnInput -> False]}, "RowDefault"]}, "RowDefault"]}, 
                    "RowDefault"], HoldForm], AutoMultiplicationSymbol -> 
                    True]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["Substitute ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"g", "(", "y", ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[" into ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], "\[LongEqual]", 
                    StyleBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["y", "3"], "3"], "-", 
                    FractionBox["x", "y"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True]}]}, "RowDefault"], 
                    HoldForm], AutoMultiplicationSymbol -> True]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}, {
                TagBox[
                 GridBox[{{
                    Cell[
                    TextData[{
                    StyleBox["The solution is ", 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    RowBox[{"f", "(", 
                    RowBox[{"x", ",", "y"}], ")"}], TraditionalForm]]], 
                    FontColor -> GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    "\[ThinSpace]\[LongEqual] ", FontColor -> GrayLevel[0], 
                    StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[
                    StyleBox[
                    Cell[
                    BoxData[
                    FormBox[
                    SubscriptBox["c", "1"], TraditionalForm]]], FontColor -> 
                    GrayLevel[0], StripOnInput -> False], 
                    GrayLevel[0.3], StripOnInput -> False], 
                    StyleBox[":", 
                    GrayLevel[0.3], StripOnInput -> False]}]]}, {
                    FrameBox[
                    TagBox[
                    GridBox[{{
                    StyleBox[
                    TemplateBox[{"\"Answer:\""}, "RowDefault"], FontFamily -> 
                    "Roboto", FontSize -> 12, StripOnInput -> False], 
                    "\[SpanFromLeft]"}, {"\"\"", 
                    StyleBox[
                    TagBox[
                    TemplateBox[{
                    RowBox[{
                    StyleBox[
                    TagBox[
                    RowBox[{
                    FractionBox[
                    SuperscriptBox["y", "3"], "3"], "-", 
                    FractionBox["x", "y"]}], HoldForm], 
                    AutoMultiplicationSymbol -> True], "\[LongEqual]", 
                    SubscriptBox["c", "1"]}]}, "RowDefault"], HoldForm], 
                    AutoMultiplicationSymbol -> True]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxItemSize -> {"Columns" -> {2.5, Automatic}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {2, 0, 3}, "Rows" -> {1.5, 1, 2}}, 
                    AllowScriptLevelChange -> False], "Grid"], FrameStyle -> 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.52, 0.76, 0.86]], Background -> 
                    RGBColor[0.91, 0.98, 1], RoundingRadius -> 3, 
                    FrameMargins -> 12, StripOnInput -> False]}}, 
                  GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                  AllowScriptLevelChange -> False, DefaultBaseStyle -> 
                  "Column", 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Column"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              AllowScriptLevelChange -> False, DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{False}}, "Rows" -> {False, {True}, False}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{3}}}, FrameStyle -> 
              GrayLevel[0.7]], "Column"], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext"}], 
       XMLElement["infos", {"count" -> "1"}, {
         XMLElement["info", {"text" -> "log(x) is the natural logarithm"}, {
           XMLElement[
           "link", {
            "url" -> "http://reference.wolfram.com/language/ref/Log.html", 
             "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://functions.wolfram.com/ElementaryFunctions/Log", 
             "text" -> "Properties", "title" -> 
             "Wolfram Functions Site"}, {}], 
           XMLElement[
           "link", {
            "url" -> "http://mathworld.wolfram.com/NaturalLogarithm.html", 
             "text" -> "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
     XMLElement["expressiontypes", {"count" -> "5"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "2"}, {
       XMLElement[
       "state", {
        "name" -> "Approximate forms", "input" -> 
         "Solution__Approximate forms"}, {}], 
       XMLElement[
       "state", {
        "name" -> "Hide steps", "input" -> "Solution__Hide steps"}, {}]}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Slope field", "scanner" -> "ODE", "id" -> "SlopeField",
      "position" -> "400", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "VectorPlot[{1, y/(x + y^4)}, {x, -10., 10.}, {y, -10., 10.}, \
VectorStyle -> \"Segment\"]"}], 
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            GraphicsBox[{{{}}, {{
                Hue[0.67, 0.6, 0.6], 
                Directive[
                 RGBColor[0.368417, 0.506779, 0.709798]], {
                 
                 LineBox[{{-10.480436468838981`, -10.012750449895796`}, \
{-9.54727349116102, -10.013680849704203`}}], 
                 
                 LineBox[{{-10.480436230618977`, -8.901810335673206}, \
{-9.547273729381024, -8.903135037877236}}], 
                 
                 LineBox[{{-10.480435652521486`, -7.790740700217761}, \
{-9.547274307478512, -7.792718747283128}}], 
                 
                 LineBox[{{-10.48043405086493, -6.67941425668164}, \
{-9.547275909135069, -6.682559264769693}}], 
                 
                 LineBox[{{-10.480428725882375`, -5.5675158329942205`}, \
{-9.547281234117627, -5.572971762407557}}], 
                 
                 LineBox[{{-10.480405482242032`, -4.4541035209128985`}, \
{-9.547304477757969, -4.464898148439325}}], 
                 
                 LineBox[{{-10.480241538427325`, -3.3352641599134385`}, \
{-9.547468421572674, -3.36225158338923}}], 
                 
                 LineBox[{{-10.475377330794084`, -2.1694903009614714`}, \
{-9.552332629205916, -2.3065395162916422`}}], 
                 
                 LineBox[{{-10.476290280476793`, -1.1893371936161752`}, \
{-9.551419679523207, -1.0652066975873833`}}], 
                 
                 LineBox[{{-10.480436065146318`, -0.01729912661244355}, \
{-9.547273894853681, -0.01575883854155973}}], 
                 
                 LineBox[{{-10.476688374033442`, 
                  1.153237293686147}, {-9.551021585966556, 
                  1.035190667209405}}], 
                 
                 LineBox[{{-10.474443157891345`, 
                  2.130411437069547}, {-9.553266802108652, 
                  2.27950244987556}}], 
                 
                 LineBox[{{-10.480228119236614`, 
                  3.301750098730289}, {-9.547481840763387, 
                  3.329649714264373}}], 
                 
                 LineBox[{{-10.480404005828332`, 
                  4.420919407131099}, {-9.547305954171666, 
                  4.431966331913118}}], 
                 
                 LineBox[{{-10.48042843173625, 
                  5.534408014505267}, {-9.54728152826375, 
                  5.539963650588505}}], 
                 
                 LineBox[{{-10.48043397026138, 
                  6.646332554730815}, {-9.54727598973862, 6.64952503641251}}], 
                 
                 LineBox[{{-10.4804356253364, 
                  7.75766999234671}, {-9.547274334663598, 7.75967352484617}}], 
                 
                 LineBox[{{-10.480436219983922`, 
                  8.868744920742524}, {-9.54727374001608, 
                  8.870084522499914}}], 
                 
                 LineBox[{{-10.480436464185315`, 
                  9.97968784043803}, {-9.547273495814686, 
                  9.980627528853962}}], 
                 
                 LineBox[{{-9.369475074167303, -10.012750501350924`}, \
{-8.436312096386741, -10.013680798249077`}}], 
                 
                 LineBox[{{-9.369474836062526, -8.901810452989883}, \
{-8.436312334491518, -8.903134920560557}}], 
                 
                 LineBox[{{-9.369474258431843, -7.790740999043776}, \
{-8.436312912122201, -7.792718448457112}}], 
                 
                 LineBox[{{-9.369472659109608, -6.679415137463558}, \
{-8.436314511444436, -6.682558383987774}}], 
                 
                 LineBox[{{-9.369467349725742, -5.567519010314514}, \
{-8.4363198208283, -5.5729685850872634`}}], 
                 
                 LineBox[{{-9.369444266668813, -4.454119029123504}, \
{-8.43634290388523, -4.464882640228719}}], 
                 
                 LineBox[{{-9.36928383467989, -3.3353923413557984`}, \
{-8.436503335874153, -3.3621234019468695`}}], 
                 
                 LineBox[{{-9.365077239284881, -2.1741026867429807`}, \
{-8.440709931269165, -2.301927130510133}}], 
                 
                 LineBox[{{-9.363992318970979, -1.1985913673884188`}, \
{-8.441794851583065, -1.0559525238151397`}}], 
                 
                 LineBox[{{-9.369474501896736, -0.017395229919211937`}, \
{-8.436312668657306, -0.01566273523479134}}], 
                 
                 LineBox[{{-9.364547953534938, 
                  1.1618434592756948`}, {-8.441239217019106, 
                  1.0265845016198571`}}], 
                 
                 LineBox[{{-9.36433718805551, 
                  2.135904039167522}, {-8.441449982498535, 
                  2.274009847777585}}], 
                 
                 LineBox[{{-9.36927084063163, 
                  3.301888395861142}, {-8.436516329922414, 
                  3.3295114171335203`}}], 
                 
                 LineBox[{{-9.369442804520645, 
                  4.420935768531862}, {-8.4363443660334, 4.431949970512354}}], 
                 
                 LineBox[{{-9.369467056732423, 
                  5.534411328589964}, {-8.43632011382162, 
                  5.539960336503808}}], 
                 
                 LineBox[{{-9.369472578657867, 
                  6.646333466806677}, {-8.436314591896176, 
                  6.649524124336648}}], 
                 
                 LineBox[{{-9.369474231274353, 
                  7.757670300227196}, {-8.436312939279693, 
                  7.759673216965684}}], 
                 
                 LineBox[{{-9.369474825433793, 
                  8.868745041159904}, {-8.43631234512025, 
                  8.870084402082533}}], 
                 
                 LineBox[{{-9.369475069515364, 
                  9.979687893099467}, {-8.43631210103868, 
                  9.980627476192526}}], 
                 
                 LineBox[{{-8.258513679495609, -10.01275055279467}, \
{-7.32535070161248, -10.01368074680533}}], 
                 
                 LineBox[{{-8.258513441505986, -8.90181057026501}, \
{-7.325350939602104, -8.90313480328543}}], 
                 
                 LineBox[{{-8.258512864341625, -7.79074129768927}, \
{-7.325351516766465, -7.792718149811617}}], 
                 
                 LineBox[{{-8.258511267349302, -6.679416017259357}, \
{-7.325353113758788, -6.682557504191975}}], 
                 
                 LineBox[{{-8.25850597350435, -5.567522180242154}, \
{-7.325358407603738, -5.572965415159623}}], 
                 
                 LineBox[{{-8.258483049557963, -4.454134448475216}, \
{-7.325381331550127, -4.464867220877007}}], 
                 
                 LineBox[{{-8.258326027227303, -3.3355181114062127`}, \
{-7.325538353880785, -3.3619976318964557`}}], 
                 
                 LineBox[{{-8.254655954858002, -2.178138201247753}, \
{-7.329208426250088, -2.2978916160053613`}}], 
                 
                 LineBox[{{-8.250933478895197, -1.2110354187825925`}, \
{-7.332930902212891, -1.0435084724209662`}}], 
                 
                 LineBox[{{-8.258512861524444, -0.017518737578265914`}, \
{-7.325351519583645, -0.015539227575737362`}}], 
                 
                 LineBox[{{-8.251754799808884, 
                  1.1733446960784442`}, {-7.332109581299204, 
                  1.0150832648171078`}}], 
                 
                 LineBox[{{-8.25406110577594, 
                  2.1406501175985704`}, {-7.329803275332151, 
                  2.2692637693465367`}}], 
                 
                 LineBox[{{-8.258313441403388, 
                  3.302023978947292}, {-7.325550939704702, 
                  3.32937583404737}}], 
                 
                 LineBox[{{-8.258481601501783, 
                  4.420952033295294}, {-7.325382779606306, 
                  4.431933705748923}}], 
                 
                 LineBox[{{-8.258505681658145, 
                  5.534414634776464}, {-7.325358699449944, 
                  5.539957030317307}}], 
                 
                 LineBox[{{-8.258511187049011, 
                  6.646334377840839}, {-7.325353194059078, 
                  6.649523213302488}}], 
                 
                 LineBox[{{-8.258512837211695, 
                  7.757670607918495}, {-7.325351543896395, 
                  7.759672909274387}}], 
                 
                 LineBox[{{-8.258513430883573, 
                  8.868745161533997}, {-7.325350950224516, 
                  8.870084281708442}}], 
                 
                 LineBox[{{-8.258513674845394, 
                  9.9796879457491}, {-7.325350706262694, 9.980627423542895}}], 
                 
                 LineBox[{{-7.147552284823897, -10.012750604227037`}, \
{-6.214389306838237, -10.013680695372962`}}], 
                 
                 LineBox[{{-7.147552046949357, -8.901810687498608}, \
{-6.214389544712778, -8.903134686051834}}], 
                 
                 LineBox[{{-7.147551470250835, -7.790741596154407}, \
{-6.2143901214112995`, -7.79271785134648}}], 
                 
                 LineBox[{{-7.147549875584024, -6.679416896070693}, \
{-6.21439171607811, -6.6825566253806405`}}], 
                 
                 LineBox[{{-7.1475445972184986`, -5.567525342802912}, \
{-6.214396994443635, -5.572962252598866}}], 
                 
                 LineBox[{{-7.147521830927025, -4.454149779729517}, \
{-6.21441976073511, -4.4648518896227065`}}], 
                 
                 LineBox[{{-7.1473681199177985`, -3.3356415374497645`}, \
{-6.214573471744335, -3.3618742058529034`}}], 
                 
                 LineBox[{{-7.144141281656083, -2.181697920081623}, \
{-6.2178003100060515`, -2.294331897171491}}], 
                 
                 LineBox[{{-7.13641415673301, -1.2286121999358488`}, \
{-6.225527434929124, -1.0259316912677097`}}], 
                 
                 LineBox[{{-7.147551088644883, -0.017683320449824937`}, \
{-6.214390503017251, -0.015374644704178339`}}], 
                 
                 LineBox[{{-7.137727799904247, 
                  1.1894586200252564`}, {-6.2242137917578875`, 
                  0.9989693408702955}}], 
                 
                 LineBox[{{-7.143657031592099, 
                  2.144790928352402}, {-6.218284560070035, 
                  2.2651229585927046`}}], 
                 
                 LineBox[{{-7.147355926218447, 
                  3.302156927072626}, {-6.214585665443688, 
                  3.329242885922036}}], 
                 
                 LineBox[{{-7.14752039679187, 
                  4.420968202274985}, {-6.214421194870265, 
                  4.431917536769232}}], 
                 
                 LineBox[{{-7.14754430651375, 
                  5.5344179330929695`}, {-6.214397285148384, 
                  5.539953732000802}}], 
                 
                 LineBox[{{-7.147549795434826, 
                  6.646335287835083}, {-6.214391796227308, 
                  6.649522303308244}}], 
                 
                 LineBox[{{-7.147551443148429, 
                  7.757670915420779}, {-6.214390148513704, 
                  7.759672601772101}}], 
                 
                 LineBox[{{-7.147552036333258, 
                  8.868745281864822}, {-6.214389555328876, 
                  8.870084161377616}}], 
                 
                 LineBox[{{-7.147552280175408, 
                  9.979687998386932}, {-6.214389311486725, 
                  9.98062737090506}}], 
                 
                 LineBox[{{-6.036590890152168, -10.01275065564803}, \
{-5.103427912064011, -10.013680643951968`}}], 
                 
                 LineBox[{{-6.036590652392641, -8.9018108046907}, \
{-5.1034281498235385`, -8.903134568859745}}], 
                 
                 LineBox[{{-6.036590076159472, -7.79074189443935}, \
{-5.103428726056707, -7.792717553061538}}], 
                 
                 LineBox[{{-6.036588483813786, -6.679417773899215}, \
{-5.103430318402393, -6.682555747552117}}], 
                 
                 LineBox[{{-6.036583220868486, -5.567528498022438}, \
{-5.103435581347693, -5.57295909737934}}], 
                 
                 LineBox[{{-6.0365606107932965`, -4.454165023639215}, \
{-5.103458191422884, -4.4648366457130075`}}], 
                 
                 LineBox[{{-6.036410116422789, -3.335762684384957}, \
{-5.10360868579339, -3.3617530589177114`}}], 
                 
                 LineBox[{{-6.033553508339712, -2.1848607668407176`}, \
{-5.106465293876467, -2.291169050412396}}], 
                 
                 LineBox[{{-6.018722474915986, -1.2551589251267503`}, \
{-5.121296327300193, -0.9993849660768082}}], 
                 
                 LineBox[{{-6.036589067504344, -0.01791355605338757}, \
{-5.103429734711836, -0.015144409100615708`}}], 
                 
                 LineBox[{{-6.021076196276237, 
                  1.2135339219281818`}, {-5.118942605939941, 
                  0.9748940389673703}}], 
                 
                 LineBox[{{-6.033154856546254, 
                  2.148434476743594}, {-5.106863945669925, 
                  2.2614794102015137`}}], 
                 
                 LineBox[{{-6.036398299519913, 
                  3.3022873162793087`}, {-5.103620502696265, 
                  3.3291124967153536`}}], 
                 
                 LineBox[{{-6.036559190410737, 
                  4.420984276314504}, {-5.103459611805442, 
                  4.431901462729713}}], 
                 
                 LineBox[{{-6.036582931299573, 
                  5.534421223567546}, {-5.103435870916607, 
                  5.539950441526226}}], 
                 
                 LineBox[{{-6.036588403815322, 
                  6.64633619679119}, {-5.103430398400857, 
                  6.649521394352137}}], 
                 
                 LineBox[{{-6.036590049084556, 
                  7.757671222734225}, {-5.103428753131623, 
                  7.759672294458656}}], 
                 
                 LineBox[{{-6.036590641782851, 
                  8.868745402152404}, {-5.103428160433328, 
                  8.870084041090033}}], 
                 
                 LineBox[{{-6.0365908855054045`, 
                  9.979688051012971}, {-5.103427916710775, 
                  9.980627318279025}}], 
                 
                 LineBox[{{-4.925629495480423, -10.012750707057656`}, \
{-3.9924665172898015`, -10.013680592542345`}}], 
                 
                 LineBox[{{-4.925629257835835, -8.901810921841303}, \
{-3.9924667549343886`, -8.903134451709137}}], 
                 
                 LineBox[{{-4.925628682067536, -7.790742192544261}, \
{-3.992467330702688, -7.792717254956625}}], 
                 
                 LineBox[{{-4.925627092038599, -6.679418650746573}, \
{-3.9924689207316244`, -6.6825548707047595`}}], 
                 
                 LineBox[{{-4.925621844454611, -5.567531645926263}, \
{-3.9924741683156135`, -5.572955949475515}}], 
                 
                 LineBox[{{-4.9255993891738274`, -4.454180180948566}, \
{-3.992496623596397, -4.464821488403657}}], 
                 
                 LineBox[{{-4.925452020246523, -3.3358816147373154`}, \
{-3.992643992523701, -3.361634128565353}}], 
                 
                 LineBox[{{-4.9229077136470485`, -2.1876892281341718`}, \
{-3.9951882991231757`, -2.288340589118942}}], 
                 
                 LineBox[{{-4.892804733994667, -1.2991835606590578`}, \
{-4.025291278775558, -0.9553603305445006}}], 
                 
                 LineBox[{{-4.92562652159516, -0.01825851503925884}, \
{-3.992469491175064, -0.014799450114744438`}}], 
                 
                 LineBox[{{-4.897815912969767, 
                  1.252899916464395}, {-4.020280099800457, 
                  0.9355280444311569}}], 
                 
                 LineBox[{{-4.922576255262521, 
                  2.1516646867104874`}, {-3.9955197575077035`, 
                  2.2582492002346193`}}], 
                 
                 LineBox[{{-4.925440565540146, 
                  3.302415219712568}, {-3.992655447230078, 
                  3.328984593282094}}], 
                 
                 LineBox[{{-4.9255979823779255`, 
                  4.421000256247544}, {-3.992498030392299, 
                  4.431885482796673}}], 
                 
                 LineBox[{{-4.925621556015942, 
                  5.534424506228126}, {-3.9924744567542825`, 
                  5.539947158865646}}], 
                 
                 LineBox[{{-4.925627012190511, 
                  6.646337104710935}, {-3.992469000579713, 
                  6.649520486432391}}], 
                 
                 LineBox[{{-4.925628655020076, 
                  7.757671529859005}, {-3.992467357750148, 
                  7.759671987333877}}], 
                 
                 LineBox[{{-4.925629247232351, 
                  8.868745522396766}, {-3.9924667655378734`, 
                  8.87008392084567}}], 
                 
                 LineBox[{{-4.925629490835383, 
                  9.979688103627216}, {-3.992466521934842, 
                  9.980627265664777}}], 
                 
                 LineBox[{{-3.8146681008086594`, -10.012750758455912`}, \
{-2.8815051225156085`, -10.013680541144087`}}], 
                 
                 LineBox[{{-3.814667863278942, -8.901811038950447}, \
{-2.8815053600453266`, -8.903134334599997}}], 
                 
                 LineBox[{{-3.8146672879750305`, -7.790742490469305}, \
{-2.881505935349238, -7.792716957031582}}], 
                 
                 LineBox[{{-3.8146657002584745`, -6.679419526614411}, \
{-2.881507523065794, -6.682553994836923}}], 
                 
                 LineBox[{{-3.8146604679771663`, -5.5675347865398015`}, \
{-2.8815127553471025`, -5.572952808861976}}], 
                 
                 LineBox[{{-3.814638166085429, -4.4541952523933945`}, \
{-2.88153505723884, -4.464806416958828}}], 
                 
                 LineBox[{{-3.814493834735138, -3.3359983887668245`}, \
{-2.88167938858913, -3.361517354535844}}], 
                 
                 LineBox[{{-3.8122152891512666`, -2.1902333968218874`}, \
{-2.8839579341730013`, -2.285796420431226}}], 
                 
                 LineBox[{{-3.7392245034024434`, -1.3816528642711978`}, \
{-2.9569487199218254`, -0.8728910269323606}}], 
                 
                 LineBox[{{-3.8146626466502065`, -0.01883239590514957}, \
{-2.8815105766740623`, -0.014225569248853705`}}], 
                 
                 LineBox[{{-3.753176048219559, 
                  1.3257329872868244`}, {-2.94299717510471, 
                  0.8626949736087275}}], 
                 
                 LineBox[{{-3.8119372469654587`, 
                  2.1545477154795227`}, {-2.8842359763588097`, 
                  2.2553661714655844`}}], 
                 
                 LineBox[{{-3.814482728312639, 
                  3.3025407077572937`}, {-2.8816904950116293`, 
                  3.3288591052373677`}}], 
                 
                 LineBox[{{-3.8146367727126895`, 
                  4.421016142898065}, {-2.881536450611579, 
                  4.431869596146151}}], 
                 
                 LineBox[{{-3.814660180663188, 
                  5.534427781102511}, {-2.88151304266108, 
                  5.539943883991261}}], 
                 
                 LineBox[{{-3.8146656205604064`, 
                  6.6463380115960895`}, {-2.8815076027638615`, 
                  6.649519579547237}}], 
                 
                 LineBox[{{-3.8146672609549896`, 
                  7.757671836795292}, {-2.8815059623692787`, 
                  7.759671680397588}}], 
                 
                 LineBox[{{-3.8146678526817572`, 
                  8.868745642597933}, {-2.881505370642511, 
                  8.870083800644503}}], 
                 
                 LineBox[{{-3.814668096165342, 
                  9.979688156229674}, {-2.8815051271589263`, 
                  9.980627213062318}}], 
                 
                 LineBox[{{-2.7037067061368796`, -10.012750809842807`}, \
{-1.7705437277414329`, -10.013680489757192`}}], 
                 
                 LineBox[{{-2.7037064687219603`, -8.901811156018148}, \
{-1.7705439651563522`, -8.903134217532296}}], 
                 
                 LineBox[{{-2.7037058938819536`, -7.790742788214643}, \
{-1.7705445399963586`, -7.792716659286245}}], 
                 
                 LineBox[{{-2.703704308473422, -6.679420401504368}, \
{-1.7705461254048904`, -6.682553119946966}}], 
                 
                 LineBox[{{-2.703699091436448, -5.567537919888349}, \
{-1.7705513424418644`, -5.57294967551343}}], 
                 
                 LineBox[{{-2.7036769415446726`, -4.454210238701213}, \
{-1.77057349233364, -4.464791430651011}}], 
                 
                 LineBox[{{-2.70353556308514, -3.336113064569581}, \
{-1.7707148707931726`, -3.3614026787330875`}}], 
                 
                 LineBox[{{-2.701484968155465, -2.1925338841385464`}, \
{-1.7727654657228475`, -2.2834959331145672`}}], 
                 
                 LineBox[{{-2.4626304786187694`, -1.535739666594467}, \
{-2.0116199552595426`, -0.7188042246090915}}], 
                 
                 LineBox[{{-2.703694202903895, -0.01997622408091785}, \
{-1.7705562309744174`, -0.01308174107308543}}], 
                 
                 LineBox[{{-2.5133048177627315`, 
                  1.4702769143126835`}, {-1.960945616115581, 
                  0.7181510465828685}}], 
                 
                 LineBox[{{-2.7012498737106716`, 
                  2.1571363922955316`}, {-1.7730005601676408`, 
                  2.2527774946495756`}}], 
                 
                 LineBox[{{-2.703524791683129, 
                  3.3026638481669806`}, {-1.7707256421951834`, 
                  3.3287359648276813`}}], 
                 
                 LineBox[{{-2.7036755614340056`, 
                  4.421031937080437}, {-1.7705748724443067`, 
                  4.431853801963778}}], 
                 
                 LineBox[{{-2.703698805241639, 
                  5.534431048218369}, {-1.7705516286366738`, 
                  5.539940616875402}}], 
                 LineBox[{{-2.7037042289250195`, 
                  6.64633891744842}, {-1.770546204953293, 
                  6.649518673694905}}], 
                 
                 LineBox[{{-2.703705866889298, 
                  7.757672143543261}, {-1.7705445669890145`, 
                  7.759671373649619}}], 
                 
                 LineBox[{{-2.703706458131071, 
                  8.868745762755927}, {-1.7705439757472416`, 
                  8.87008368048651}}], 
                 
                 LineBox[{{-2.703706701495284, 
                  9.979688208820349}, {-1.7705437323830284`, 
                  9.980627160471645}}], 
                 
                 LineBox[{{-1.5927453114650825`, -10.012750861218343`}, \
{-0.659582332967274, -10.013680438381657`}}], 
                 
                 LineBox[{{-1.5927450741648905`, -8.90181127304443}, \
{-0.659582570267466, -8.903134100506012}}], 
                 
                 LineBox[{{-1.5927444997883073`, -7.790743085780438}, \
{-0.6595831446440491, -7.79271636172045}}], 
                 
                 LineBox[{{-1.5927429166834537`, -6.679421275418081}, \
{-0.6595847277489029, -6.682552246033251}}], 
                 
                 LineBox[{{-1.5927377148327482`, -5.567541045997084}, \
{-0.6595899295996083, -5.572946549404693}}], 
                 
                 LineBox[{{-1.5927157155678986`, -4.454225140591338}, \
{-0.659611928864458, -4.4647765287608845`}}], 
                 
                 LineBox[{{-1.5925772083513594`, -3.3362256981740224`}, \
{-0.6597504360809971, -3.361290045128646}}], 
                 
                 LineBox[{{-1.5907235352553037`, -2.1946239515138535`}, \
{-0.6616041091770528, -2.2814058657392597`}}], 
                 
                 LineBox[{{-1.3117239855855538`, -0.6991762461273723}, \
{-0.9406036588468027, -1.555367645076186}}], 
                 
                 LineBox[{{-1.5926952952044, -0.023376379862926733`}, \
{-0.6596323492279567, -0.009681585291076544}}], 
                 
                 LineBox[{{-1.2523464457732745`, 
                  0.6450186469341704}, {-0.9999811986590821, 
                  1.5434093139613814`}}], 
                 
                 LineBox[{{-1.5905233264034873`, 
                  2.1594733968972517`}, {-0.6618043180288693, 
                  2.250440490047856}}], 
                 
                 LineBox[{{-1.5925667593199841`, 
                  3.3027847061855127`}, {-0.6597608851123724, 
                  3.3286151068091496`}}], 
                 
                 LineBox[{{-1.5927143485605755`, 
                  4.421047639599581}, {-0.6596132958717811, 
                  4.4318380994446365`}}], 
                 
                 LineBox[{{-1.592737429751619, 
                  5.53443430760324}, {-0.6595902146807375, 
                  5.539937357490531}}], 
                 
                 LineBox[{{-1.5927428372843622`, 
                  6.6463398222696926`}, {-0.6595848071479943, 
                  6.649517768873634}}], 
                 
                 LineBox[{{-1.5927444728230014`, 
                  7.757672450103086}, {-0.6595831716093553, 
                  7.759671067089795}}], 
                 
                 LineBox[{{-1.5927450635802916`, 
                  8.868745882870769}, {-0.659582580852065, 
                  8.870083560371667}}], 
                 
                 LineBox[{{-1.5927453068252082`, 
                  9.979688261399243}, {-0.6595823376071484, 
                  9.980627107892749}}], 
                 
                 LineBox[{{-0.4817839167932686, -10.012750912582524`}, {
                  0.45137906180686793`, -10.013680387017475`}}], 
                 
                 LineBox[{{-0.48178367960773283`, -8.901811390029316}, {
                  0.45137882462133216`, -8.903133983521128}}], 
                 
                 LineBox[{{-0.48178310569409216`, -7.790743383166853}, {
                  0.4513782507076915, -7.792716064334035}}], 
                 
                 LineBox[{{-0.4817815248885803, -6.679422148357184}, {
                  0.4513766699021796, -6.682551373094149}}], 
                 
                 LineBox[{{-0.4817763381663574, -5.5675441648910695`}, {
                  0.45137148317995673`, -5.5729434305107075`}}], 
                 
                 LineBox[{{-0.4817544881712175, -4.454239958775007}, {
                  0.45134963318481686`, -4.464761710577216}}], 
                 
                 LineBox[{{-0.4816187734544216, -3.336336343632071}, {
                  0.45121391846802095`, -3.3611793996705974`}}], 
                 
                 LineBox[{{-0.4799363247939603, -2.196531094460093}, {
                  0.44953146980755965`, -2.279498722793021}}], 
                 
                 LineBox[{{-0.39659188336319007`, -0.8584958583295961}, {
                  0.3661870283767894, -1.3960480328739626`}}], 
                 
                 LineBox[{{-0.33105611462317014`, -0.35994556701135033`}, {
                  0.3006512596367695, 0.32688760185734705`}}], 
                 LineBox[{{-0.3846247578082419, 0.80921285062062}, {
                  0.35421990282184124`, 1.3792151102749317`}}], 
                 
                 LineBox[{{-0.4797647164707133, 2.1615935741601398`}, {
                  0.4493598614843126, 2.248320312784968}}], 
                 
                 LineBox[{{-0.48160863472392745`, 3.3029033446622513`}, {
                  0.4512037797375268, 3.3284964683324105`}}], 
                 
                 LineBox[{{-0.48175313411082965`, 4.421063251251098}, {
                  0.451348279124429, 4.431822487793118}}], 
                 
                 LineBox[{{-0.4817760541934527, 5.534437559284531}, {
                  0.45137119920705204`, 5.539934105809241}}], 
                 
                 LineBox[{{-0.48178144563844705`, 6.646340726061664}, {
                  0.4513765906520464, 6.649516865081663}}], 
                 
                 LineBox[{{-0.4817830787561008, 7.757672756474937}, {
                  0.45137822376970016`, 7.759670760717943}}], 
                 
                 LineBox[{{-0.48178366902941955`, 8.868746002942487}, {
                  0.4513788140430189, 8.870083440299952}}], 
                 
                 LineBox[{{-0.4817839121551146, 9.979688313966362}, {
                  0.45137905716871396`, 9.98062705532563}}], 
                 
                 LineBox[{{0.6291774778785624, -10.012750963935353`}, {
                  1.5623404565809929`, -10.013680335664645`}}], 
                 
                 LineBox[{{0.629177714949513, -8.901811506972825}, {
                  1.5623402195100422`, -8.903133866577617}}], 
                 
                 LineBox[{{0.6291782884006915, -7.790743680374049}, {
                  1.5623396460588634`, -7.792715767126839}}], 
                 
                 LineBox[{{0.6291798669111874, -6.6794230203233065`}, {
                  1.5623380675483678`, -6.682550501128026}}], 
                 
                 LineBox[{{0.6291850385624356, -5.567547276595254}, {
                  1.5623328958971197`, -5.572940318806525}}], 
                 
                 LineBox[{{0.6292067406294853, -4.454254693955491}, {
                  1.5623111938300696`, -4.464746975396732}}], 
                 
                 LineBox[{{0.629339738812243, -3.3364450531054977`}, {
                  1.5621781956473122`, -3.3610706901971708`}}], 
                 
                 LineBox[{{0.6308724230721321, -2.198278235397504}, {
                  1.5606455113874231`, -2.2777515818556098`}}], 
                 
                 LineBox[{{0.6649485313506573, -0.94810478768551}, {
                  1.5265694031088979`, -1.3064391035180487`}}], 
                 
                 LineBox[{{0.629230320958081, -0.00949162895158852}, {
                  1.5622876135014743`, -0.02356633620241476}}], 
                 
                 LineBox[{{0.6675322879993737, 0.9089562860503453}, {
                  1.5239856464601815`, 1.2794716748452064`}}], 
                 
                 LineBox[{{0.6310203851211091, 2.163525645667929}, {
                  1.560497549338446, 2.246388241277178}}], 
                 
                 LineBox[{{0.6293495787628525, 3.303019824160847}, {
                  1.5621683556967028`, 3.3283799888338144`}}], 
                 
                 LineBox[{{0.6292080818970665, 4.4210787728214145`}, {
                  1.5623098525624888`, 4.431806966222801}}], 
                 
                 LineBox[{{0.6291853214325389, 5.534440803289519}, {
                  1.5623326130270163`, 5.539930861804251}}], 
                 
                 LineBox[{{0.6291799460127143, 6.6463416288260895`}, {
                  1.562337988446841, 6.649515962317237}}], 
                 
                 LineBox[{{0.6291783153114028, 7.7576730626589905`}, {
                  1.5623396191481524`, 7.759670454533891}}], 
                 
                 LineBox[{{0.6291777255215452, 8.8687461229711}, {
                  1.56234020893801, 8.870083320271338}}], 
                 
                 LineBox[{{0.6291774825149967, 9.97968836652171}, {
                  1.5623404519445585`, 9.980627002770285}}], 
                 
                 LineBox[{{1.74013887255041, -10.012751015276836`}, {
                  2.673301851355101, -10.013680284323165`}}], 
                 
                 LineBox[{{1.7401391095068466`, -8.901811623874982}, {
                  2.6733016143986648`, -8.90313374967546}}], 
                 
                 LineBox[{{1.7401396824960427`, -7.7907439774021885`}, {
                  2.6733010414094682`, -7.792715470098699}}], 
                 
                 LineBox[{{1.7401412587158382`, -6.6794238913180735`}, {
                  2.673299465189673, -6.68254963013326}}], 
                 
                 LineBox[{{1.7401464153533437`, -5.567550381134467}, {
                  2.6732943085521677`, -5.572937214267311}}], 
                 
                 LineBox[{{1.7401679708185462`, -4.4542693468282035`}, {
                  2.673272753086965, -4.464732322524019}}], 
                 
                 LineBox[{{1.7402983257758096`, -3.336551876947799}, {
                  2.6731423981297016`, -3.36096386635487}}], 
                 
                 LineBox[{{1.741699304114577, -2.199884633185479}, {
                  2.6717414197909344`, -2.2761451840676346`}}], 
                 
                 LineBox[{{1.7592026980084414`, -0.9952626936685345}, {
                  2.6542380258970697`, -1.259281197535024}}], 
                 
                 LineBox[{{1.740151729316367, -0.013034246827093036`}, {
                  2.673288994589144, -0.02002371832691024}}], 
                 
                 LineBox[{{1.7598883740202604`, 0.9599021168673549}, {
                  2.653552349885251, 1.2285258440281972`}}], 
                 
                 LineBox[{{1.741827564798696, 2.165293493138203}, {
                  2.671613159106815, 2.2446203938069043`}}], 
                 
                 LineBox[{{1.7403078779481669`, 3.3031342030621755`}, {
                  2.673132845957344, 3.3282656099324868`}}], 
                 
                 LineBox[{{1.7401692994452083`, 4.421094205087906}, {
                  2.6732714244603026`, 4.431791533956311}}], 
                 
                 LineBox[{{1.740146697126036, 5.534444039645357}, {
                  2.673294026779475, 5.539927625448414}}], 
                 
                 LineBox[{{1.74014133766911, 6.646342530564722}, {
                  2.673299386236401, 6.649515060578604}}], 
                 
                 LineBox[{{1.740139709379509, 7.757673368655416}, {
                  2.673301014526002, 7.759670148537465}}], 
                 
                 LineBox[{{1.7401391200726022`, 8.868746242956632}, {
                  2.673301603832909, 8.870083200285805}}], 
                 
                 LineBox[{{1.7401388771851258`, 9.979688419065289}, {
                  2.6733018467203853`, 9.980626950226705}}], 
                 
                 LineBox[{{2.851100267222275, -10.012751066606974`}, {
                  3.7842632461291923`, -10.013680232993027`}}], 
                 
                 LineBox[{{2.8511005040642683`, -8.901811740735807}, {
                  3.784263009287199, -8.903133632814633}}], 
                 
                 LineBox[{{2.8511010765919607`, -7.790744274251433}, {
                  3.784262436759506, -7.792715173249454}}], 
                 
                 LineBox[{{2.8511026505253616`, -6.679424761343107}, {
                  3.784260862826105, -6.682548760108225}}], 
                 
                 LineBox[{{2.8511077922060815`, -5.567553478533428}, {
                  3.784255721145386, -5.572934116868349}}], 
                 
                 LineBox[{{2.8511292023805193`, -4.454283918080814}, {
                  3.7842343109709473`, -4.464717751271409}}], 
                 
                 LineBox[{{2.851256984877865, -3.3366568637818554`}, {
                  3.7841065284736026`, -3.360858879520813}}], 
                 
                 LineBox[{{2.852541560085579, -2.2013665845963484`}, {
                  3.7828219532658887`, -2.2746632326567657`}}], 
                 
                 LineBox[{{2.8628276106270767`, -1.0233190333746651`}, {
                  3.7725359027243908`, -1.2312248578288936`}}], 
                 
                 LineBox[{{2.851105826376926, -0.014204460270504957`}, {
                  3.7842576869745406`, -0.01885350488349832}}], 
                 
                 LineBox[{{2.8630021075084264`, 0.989500472382934}, {
                  3.77236140584304, 1.198927488512618}}], 
                 
                 LineBox[{{2.852653289836154, 2.166917133181477}, {
                  3.7827102235153127`, 2.2429967537636304`}}], 
                 
                 LineBox[{{2.85126625978182, 3.3032465376617584`}, {
                  3.7840972535696467`, 3.3281532753329035`}}], 
                 
                 LineBox[{{2.851130518515948, 4.421109548819029}, {
                  3.784232994835519, 4.431776190225188}}], 
                 
                 LineBox[{{2.8511080728867206`, 5.534447268379064}, {
                  3.784255440464746, 5.539924396714707}}], 
                 
                 LineBox[{{2.851102729330728, 6.646343431279307}, {
                  3.7842607840207387`, 6.649514159864018}}], 
                 
                 LineBox[{{2.8511011034482165`, 7.757673674464388}, {
                  3.784262409903251, 7.759669842728494}}], 
                 
                 LineBox[{{2.8511005146237522`, 8.868746362899108}, {
                  3.784262998727715, 8.870083080343328}}], 
                 
                 LineBox[{{2.8511002718552727`, 9.979688471597104}, {
                  3.784263241496194, 9.98062689769489}}], 
                 
                 LineBox[{{3.9620616618941567`, -10.012751117925772`}, {
                  4.895224640903266, -10.013680181674228`}}], 
                 
                 LineBox[{{3.9620618986217773`, -8.901811857555325}, {
                  4.895224404175646, -8.903133515995119}}], 
                 
                 LineBox[{{3.962062470688445, -7.790744570921945}, {
                  4.895223832108978, -7.792714876578942}}], 
                 
                 LineBox[{{3.9620640423397466`, -6.679425630400027}, {
                  4.895222260457676, -6.682547891051306}}], 
                 
                 LineBox[{{3.9620691691203644`, -5.567556568816743}, {
                  4.8952171336770585`, -5.572931026585035}}], 
                 
                 LineBox[{{3.9620904353001727`, -4.454298408393352}, {
                  4.89519586749725, -4.464703260958871}}], 
                 
                 LineBox[{{3.962215713668581, -3.336760060573626}, {
                  4.895070589128841, -3.360755682729042}}], 
                 
                 LineBox[{{3.96339693721431, -2.202737971043581}, {
                  4.893889365583113, -2.273291846209532}}], 
                 
                 LineBox[{{3.969972449025831, -1.0417167650285404`}, {
                  4.887313853771592, -1.212827126175018}}], 
                 
                 LineBox[{{3.9620646803543558`, -0.014787576230843882`}, {
                  4.895221622443067, -0.018270388923159395`}}], 
                 
                 LineBox[{{3.969983029266217, 1.0086020974901138`}, {
                  4.887303273531206, 1.1798258634054384`}}], 
                 
                 LineBox[{{3.9634947058254557`, 2.1684134663674}, {
                  4.893791596971967, 2.2415004205777067`}}], 
                 
                 LineBox[{{3.9622247213480994`, 3.3033568822620207`}, {
                  4.8950615814493235`, 3.3280429307326407`}}], 
                 
                 LineBox[{{3.962091739091889, 4.4211248047744505`}, {
                  4.895194563705534, 4.431760934269766}}], 
                 
                 LineBox[{{3.9620694487142774`, 5.534450489517536}, {
                  4.895216854083145, 5.539921175576235}}], 
                 
                 LineBox[{{3.9620641209975562`, 6.646344330971591}, {
                  4.895222181799866, 6.6495132601717355`}}], 
                 
                 LineBox[{{3.9620624975175254`, 7.757673980086077}, {
                  4.8952238052798975`, 7.759669537106803}}], 
                 
                 LineBox[{{3.9620619091749942`, 8.868746482798551}, {
                  4.895224393622429, 8.870082960443886}}], 
                 
                 LineBox[{{3.9620616665254373`, 9.979688524117158}, {
                  4.895224636271986, 9.980626845174834}}], 
                 
                 LineBox[{{5.073023056566055, -10.012751169233233`}, {
                  6.006186035677323, -10.013680130366767`}}], 
                 
                 LineBox[{{5.073023293179374, -8.901811974333553}, {
                  6.006185799064004, -8.90313339921689}}], 
                 
                 LineBox[{{5.073023864785495, -7.790744867413886}, {
                  6.006185227457884, -7.792714580087002}}], 
                 
                 LineBox[{{5.073025434158982, -6.679426498490447}, {
                  6.006183658084396, -6.682547022960885}}], 
                 
                 LineBox[{{5.07303054609591, -5.567559652008901}, {
                  6.006178546147467, -5.572927943392876}}], 
                 
                 LineBox[{{5.073051669562485, -4.454312818438313}, {
                  6.006157422680893, -4.464688850913909}}], 
                 
                 LineBox[{{5.073174509801233, -3.3368615127021055`}, {
                  6.006034582442146, -3.360654230600563}}], 
                 
                 LineBox[{{5.074263579542951, -2.204010688863173}, {
                  6.004945512700427, -2.2720191283899407`}}], 
                 
                 LineBox[{{5.07870891962325, -1.0546515379138368`}, {
                  6.000500172620127, -1.1998923532897217`}}], 
                 
                 LineBox[{{5.073024902338248, -0.015136809790161727`}, {
                  6.00618418990513, -0.017921155363841552`}}], 
                 
                 LineBox[{{5.0786632786253, 1.0218838341948229`}, {
                  6.000545813618078, 1.166544126700729}}], 
                 
                 LineBox[{{5.074349486390339, 2.1697968591079073`}, {
                  6.0048596058530395`, 2.2401170278371993`}}], 
                 
                 LineBox[{{5.073183259858723, 3.3034652892596905`}, {
                  6.006025832384655, 3.327934523734972}}], 
                 
                 LineBox[{{5.073052961155883, 4.421139973705171}, {
                  6.0061561310874945`, 4.431745765339046}}], 
                 
                 LineBox[{{5.0730308246083915`, 5.534453703087542}, {
                  6.006178267634986, 5.539917962006229}}], 
                 
                 LineBox[{{5.073025512669583, 6.64634522964331}, {
                  6.006183579573795, 6.649512361500016}}], 
                 
                 LineBox[{{5.073023891587433, 7.757674285520657}, {
                  6.006185200655944, 7.759669231672224}}], 
                 
                 LineBox[{{5.073023303726329, 8.868746602654982}, {
                  6.006185788517049, 8.870082840587454}}], 
                 
                 LineBox[{{5.073023061195619, 9.979688576625458}, {
                  6.006186031047759, 9.980626792666536}}], 
                 
                 LineBox[{{6.18398445123797, -10.012751220529362`}, {
                  7.117147430451363, -10.013680079070637`}}], 
                 
                 LineBox[{{6.183984687737058, -8.901812091070516}, {
                  7.117147193952275, -8.903133282479924}}], 
                 
                 LineBox[{{6.183985258883109, -7.790745163727415}, {
                  7.1171466228062235`, -7.792714283773472}}], 
                 
                 LineBox[{{6.183986825983057, -6.679427365615979}, {
                  7.117145055706276, -6.682546155835354}}], 
                 
                 LineBox[{{6.183991923132439, -5.567562728134284}, {
                  7.117139958556894, -5.572924867267495}}], 
                 
                 LineBox[{{6.184012905152644, -4.454327148880767}, {
                  7.117118976536689, -4.464674520471457}}], 
                 
                 LineBox[{{6.184133371027035, -3.336961264025771}, {
                  7.116998510662298, -3.3605544792768973`}}], 
                 
                 LineBox[{{6.185139947644801, -2.2051949910143778`}, {
                  7.115991934044532, -2.2708348262387363`}}], 
                 
                 LineBox[{{6.188264033442733, -1.06422078739921}, {
                  7.1128678482466, -1.1903231038043487`}}], 
                 
                 LineBox[{{6.183985661116962, -0.015369367395912848`}, {
                  7.117146220572371, -0.017688597758090428`}}], 
                 
                 LineBox[{{6.188200414637297, 1.031631056953154}, {
                  7.112931467052036, 1.1567969039423982`}}], 
                 
                 LineBox[{{6.185215720310532, 2.1710796002033006`}, {
                  7.115916161378802, 2.2388342867418065`}}], 
                 
                 LineBox[{{6.184141872646217, 3.3035718092286404`}, {
                  7.116990009043117, 3.3278280037660215`}}], 
                 
                 LineBox[{{6.1840141846910255`, 4.4211550563536495`}, {
                  7.117117696998307, 4.431730682690568}}], 
                 
                 LineBox[{{6.183992200568751, 5.534456909115724}, {
                  7.117139681120583, 5.539914755978047}}], 
                 
                 LineBox[{{6.1839869043467965`, 6.6463461272962014`}, {
                  7.117144977342536, 6.649511463847125}}], 
                 
                 LineBox[{{6.183985285657942, 7.757674590768298}, {
                  7.117146596031391, 7.759668926424584}}], 
                 
                 LineBox[{{6.183984698277755, 8.868746722468426}, {
                  7.117147183411578, 8.870082720774011}}], 
                 
                 LineBox[{{6.183984455865819, 9.979688629122005}, {
                  7.1171474258235135`, 9.98062674016999}}], 
                 
                 LineBox[{{7.294945845909902, -10.012751271814162`}, {
                  8.228108825225386, -10.013680027785837`}}], 
                 
                 LineBox[{{7.29494608229483, -8.901812207766236}, {
                  8.228108588840458, -8.903133165784205}}], 
                 
                 LineBox[{{7.294946652981287, -7.790745459862695}, {
                  8.228108018154002, -7.792713987638192}}], 
                 
                 LineBox[{{7.294948217811961, -6.679428231778231}, {
                  8.228106453323328, -6.682545289673102}}], 
                 
                 LineBox[{{7.294953300229671, -5.567565797217157}, {
                  8.228101370905616, -5.572921798184621}}], 
                 
                 LineBox[{{7.294974142056037, -4.454341400378453}, {
                  8.22808052907925, -4.46466026897377}}], 
                 
                 LineBox[{{7.29509229519028, -3.3370593569457183`}, {
                  8.227962375945008, -3.36045638635695}}], 
                 
                 LineBox[{{7.296024756056863, -2.206299760716438}, {
                  8.227029915078425, -2.269730056536676}}], 
                 
                 LineBox[{{7.298281521096453, -1.0715779826158849`}, {
                  8.224773150038834, -1.1829659085876734`}}], 
                 
                 LineBox[{{7.2949466728380585`, -0.015535350365527598`}, {
                  8.22810799829723, -0.01752261478847568}}], 
                 
                 LineBox[{{7.298214576161136, 1.0390796979252077`}, {
                  8.224840094974152, 1.1493482629703442`}}], 
                 
                 LineBox[{{7.29609182579256, 2.1722722623733137`}, {
                  8.226962845342728, 2.237641624571793}}], 
                 
                 LineBox[{{7.295100557157686, 3.3036764909984506`}, {
                  8.227954113977601, 3.3277233219962112`}}], 
                 LineBox[{{7.294975409680651, 4.421170053453922}, {
                  8.228079261454637, 4.431715685590294}}], 
                 
                 LineBox[{{7.294953576595045, 5.5344601076286}, {
                  8.228101094540243, 5.539911557465171}}], 
                 
                 LineBox[{{7.294948296029185, 6.646347023931996}, {
                  8.228106375106103, 6.649510567211329}}], 
                 
                 LineBox[{{7.294946679729048, 7.757674895829172}, {
                  8.22810799140624, 7.759668621363709}}], 
                 
                 LineBox[{{7.294946092829274, 8.868746842238906}, {
                  8.228108578306015, 8.870082601003531}}], 
                 
                 LineBox[{{7.2949458505360365`, 9.979688681606804}, {
                  8.228108820599251, 9.980626687685191}}], 
                 
                 LineBox[{{8.40590724058185, -10.012751323087638`}, {
                  9.33907021999939, -10.01367997651236}}], 
                 
                 LineBox[{{8.40590747685269, -8.901812324420735}, {
                  9.339069983728553, -8.903133049129709}}], 
                 
                 LineBox[{{8.405908047080029, -7.790745755819887}, {
                  9.339069413501212, -7.792713691681001}}], 
                 
                 LineBox[{{8.405909609645684, -6.679429096978807}, {
                  9.339067850935558, -6.682544424472526}}], 
                 
                 LineBox[{{8.40591467738733, -5.567568859281679}, {
                  9.339062783193915, -5.572918736120099}}], 
                 
                 LineBox[{{8.405935380258256, -4.454355573581887}, {
                  9.339042080322988, -4.464646095770336}}], 
                 
                 LineBox[{{8.40605128022375, -3.3371558324656787`}, {
                  9.338926180357493, -3.3603599108369893`}}], 
                 
                 LineBox[{{8.406916924664836, -2.2073327322940726`}, {
                  9.338060535916405, -2.2686970849590407`}}], 
                 
                 LineBox[{{8.408579316203234, -1.077406550193256}, {
                  9.336398144378007, -1.1771373410103023`}}], 
                 
                 LineBox[{{8.405907819191608, -0.015659766743668667`}, {
                  9.339069641389637, -0.01739819841033461}}], 
                 
                 LineBox[{{8.40851476518394, 1.0449528208863745`}, {
                  9.336462695397305, 1.1434751400091774`}}], 
                 
                 LineBox[{{8.406976484682467, 2.1733839910131443`}, {
                  9.338000975898776, 2.2365298959319633`}}], 
                 
                 LineBox[{{8.406059310948962, 3.303779381728942}, {
                  9.33891814963228, 3.3276204312657205`}}], 
                 
                 LineBox[{{8.40593663610833, 4.421184965731724}, {
                  9.339040824472912, 4.4317007733124925`}}], 
                 
                 LineBox[{{8.405914952686967, 5.534463298652565}, {
                  9.339062507894278, 5.539908366441207}}], 
                 
                 LineBox[{{8.405909687716736, 6.646347919552423}, {
                  9.339067772864505, 6.649509671590903}}], 
                 
                 LineBox[{{8.405908073800752, 7.757675200703451}, {
                  9.33906938678049, 7.75966831648943}}], 
                 
                 LineBox[{{8.405907487380885, 8.868746961966444}, {
                  9.339069973200358, 8.870082481275993}}], 
                 
                 LineBox[{{8.405907245206272, 9.979688734079858}, {
                  9.339070215374973, 9.980626635212136}}], 
                 
                 LineBox[{{9.516868635253816, -10.012751374349792`}, {
                  10.45003161477338, -10.013679925250207`}}], 
                 
                 LineBox[{{9.516868871410637, -8.901812441034032}, {
                  10.450031378616563`, -8.903132932516408}}], 
                 
                 LineBox[{{9.516869441179335, -7.79074605159915}, {
                  10.450030808847863`, -7.792713395901738}}], 
                 
                 LineBox[{{9.516871001484215, -6.6794299612193075`}, {
                  10.450029248542982`, -6.682543560232025}}], 
                 
                 LineBox[{{9.516876054605136, -5.567571914351895}, {
                  10.45002419542206, -5.572915681049882}}], 
                 
                 LineBox[{{9.516896619745086, -4.454369669134457}, {
                  10.45000363028211, -4.464632000217765}}], 
                 
                 LineBox[{{9.517010324144398, -3.3372507302490964`}, {
                  10.4498899258828, -3.3602650130535716`}}], 
                 
                 LineBox[{{9.517815540598225, -2.2083006707182324`}, {
                  10.449084709428973`, -2.2677291465348817`}}], 
                 
                 LineBox[{{9.51905670790053, -1.0821359701476272`}, {
                  10.44784354212667, -1.1724079210559315`}}], 
                 
                 LineBox[{{9.516869043744645, -0.015756493065978785`}, {
                  10.450031206282553`, -0.017301472088024492`}}], 
                 
                 LineBox[{{9.518996640390341, 1.0497003560226223`}, {
                  10.447903609636858`, 1.1387276048729293`}}], 
                 
                 LineBox[{{9.517868591495363, 2.174422736671665}, {
                  10.449031658531833`, 2.2354911502734427`}}], 
                 
                 LineBox[{{9.517018131679096, 3.3038805269809184`}, {
                  10.449882118348103`, 3.327519286013743}}], 
                 
                 LineBox[{{9.516897863957862, 4.421199793904606}, {
                  10.450002386069334`, 4.431685945139611}}], 
                 
                 LineBox[{{9.516876328844207, 5.534466482213887}, {
                  10.450023921182991`, 5.539905182879885}}], 
                 
                 LineBox[{{9.51687107940944, 6.646348814159205}, {
                  10.450029170617757`, 6.6495087769841215`}}], 
                 
                 LineBox[{{9.516869467873054, 7.757675505391306}, {
                  10.450030782154142`, 7.759668011801575}}], 
                 
                 LineBox[{{9.516868881932588, 8.868747081651064}, {
                  10.45003136809461, 8.870082361591374}}], 
                 
                 LineBox[{{9.516868639876524, 9.979688786541173}, {
                  10.450031610150674`, 9.980626582750823}}]}}}}, {
             GridLines -> Dynamic[
                Map[{{#, 
                   GrayLevel[0.7]}}& , 
                 MousePosition[{"Graphics", Graphics}, None]]], 
              Method -> {"GridLinesInFront" -> True}, Epilog -> {
                DynamicBox[
                 Typeset`ToBoxes[
                  
                  DynamicModule[{
                   CalculateUtilities`GraphicsUtilities`Private`pt = (
                    NearestFunction[
                    Hold[
                    Nearest[CompressedData["
1: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
X/ZaOoM4v/yAv4Loy8CCPhLnf6Qk0gN9saVeqcf5b+zpEFr2Jao+i+/H7sPI
JgG+mNkn2fH9VgffOoG+fCr3uOH7/8pwUFr+91eXyAZ8/9FG2WH09WarfRL2
Bv6Qv+hLTTw9Gf20Nkn9QF8ST2sdM1OjSa2dDAP6OjJ078uWrVFU/9YhH/S1
a2p1XAb0iSdZY+hLan/1VuwvlhzN0NfFxfmcNOh6Mtkt6Ou6PE2cB7rHd+1U
9FVh8Nk2CbrUCF8c+mp6+PITB/S6jxVc6Oui4eRSJHSV7Y5xLuDr2pPMy/TQ
Z3aY6qAvg01nUo5DL5ST7D0KviyMdgm/2xJFidjt9LoGvlqs4qX9k6OJGTNn
9jqTcjKQaPN6hieKWihg2VQJvhRuXub2CosmEdWzgX/4aUSrXDbyM0MUxTDf
OfJdrJAQsQv9Y1rhJCH8sRPPYgKpcdtncqI4lNqbfZ+PcyCLSA1qZNb9CCFT
F8cPuDiHkhuaW4zcqu9R554c0l9RFEJJ3A10ZcoOI66Cxt30+S+oI42aU247
Qqkb/9pnx5KyqOIwMUnpB9HEr6pni3taAVXbMZ3xYmUUZXCfZ4hWRaOe+xrv
s4HzS/EYHFYCXxmVWzMa4fzv3Qf0DoKv4G9b+NXg/qcmEib7wNfDff2PXsP9
RW9/+M8bfBXF/mbG+R2V/mWmA76qh/P9V8L8NH+YeHwEX8lZ9dtw/j7XBRLR
1+tfIU9x/vV82rOc4GvRvfUxvp9HwmU+9MVUEMWN7xd7br0S+mpwmo7C96+6
2qeBvrqzczjw/bkYqvvQl1Bgox36kW63otuAnhpCh7E78VpNoa+9HatGJnnh
nzuHR6vQl6bjs0qRFbnURl4fb/TlFdGt8R16pt38JPp6GZwbgb1vn5Ah+rLP
FVOYgv7eNOkz+tpzPZAHO33t6UfoK3rX0bEZ6LybfjSgL85jvh92QR+Jnxnb
Bb5Mu0nEAvTGo3dUL4KvHPvSC4LQ7VfLJfeCr0OTc//4t8RSt9lGWZXA17HB
hMMboJvHXFTzBF83XH/u/gc9KOeu1lHwFc+X9DL+Xw5Vvz7CKwZ8GWve/cYi
HEv5FszH5wrRiFR2z/vHf3IoTqa2+v0ihSQ+Y6rLhjGO4iEDXPdVksiDFSL1
3wNzqJnHTlXG7zKJ4sDKByqw/ibBQMuaLRSRGxNw/QvrX25IserW1if+036K
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
PnytKBB97SvLL/4GnVdGWBR9/f7Lu2QF/ezKXYPoizI7mv4VerNi3Dr0dadV
1+Es9I5DLM6m4CstgEluDPpaZ+0RM/AVWSgo5g39/A4Llm/gK+7Z/qv10L/G
FdMmfMtJtPPKx7ZHGqnxcyt+XZemkaffTrGPH2ymMk43XHHgKiTvaoKWmOUb
KWfJP/xsK1PJlQd1aUpSzVRweUmg9Lt08ld/Qz2e/5GGhtJ0vSqRZlbtxfNb
2zaI7zE/Tmx2D9mvgO9lpqo+yu5JoZokPeW04XsZSfnZ6P40ikvpbawn7K9k
X1FvWFlACWyOZ+mA/e9Nikt0ptMo/aY5Bl9YP10ulU4CfH0OtHxZC+ura98J
0gBf0sWpmXh/KtWa/x/4Wnqc/mcUulIl85IF/v6X8bo11tBpN36VoC9fOvVn
OL+6VJON6Ku3qn0Sz/+ybCkafZ0O86Hh+ZM7XejRl2ddbRT2b4nRF9BX0f3g
jfh+u8/+mGkGX4YHZL2wj8ZsdERffTv5lt//13B4EfpSvnjAATv7v2vs6Gtq
fMeyn6gfyp/Ql5uBn1ZMNayndWMN+rpzeWaH8Ic2ylv66WX0VSl20Bj7545T
bOhr/zOKC3tSaYU0+trC8OkSduX/9KTQ12B1+NxO/H4xQwN9fZtnrMfezq+T
j77WtTq/wL47OuKfMP78BM+b/kfQU38b+7uDL7FcEioEPUTLyaELfAkmGSjH
Qp9bPHbRGnx17ty+dxv0qVSOIUPwdXlnSmA+dEeXF585TcuJX1Lt6Grok/pX
P5WAL1EJvpSgmmYq6wBVYiFLIw1PDCulKtqo8aCQzDsbC0lhZe0Eb30zZTce
vFAll0rkGVP8E8raqAg20YyrV9KJ9aor9/H8C/atMn7iaiSmauETnp9OWelw
9JImOUVawtjg+6Olz013OKRQL9nj+7Lh+4OWZ89lP0uj0vjT7z2G/Xk546SC
awsonYzKIUHY/53CyZoXKTSqWUFYvwDWFzf4mW0KvvYEafMzwvqVh+W6+cCX
Rh/TXbz/5vfnXFdp1VLZU06jAtCdM+iTjcDXw1ePJ3F+Bg6C5w3Al+32Ll+c
n1Sx6Nk68PVHULYJz1/DLVmFvuhTZGLx/Ld8ZZs3gS9zNr0r2O+dXLqJvp4W
C/7GfuftvU/o6/7GyuX3z+3yuYi+zhekc+L7i7wUeou+XKbLlv1wFmlvQF93
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

                    "] -> CompressedData["
1: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
/td8zvTtOnGZvD89sUUG978qtuK1zF1yx2FG5rG9QwzVCOMLasLjDLGvP15t
dJljuA/5Whaem2asDk9Js1s7yCiJT7w6bEMjNHZvNK+fnWNsNphyuzdHIwZ0
7EoS4fzfztun3gZfzUvGNibD+bvus+aGgK907uqFc7C/uv7KTZrgy+tOzv0N
sP9d77l7auCrKXGn0WboIuKap0zBV3fDofM4vyjt10mfwVdMhOc8zr/78Nlb
6Ot8m+MqnH/2lQMF6Ks7cyoS36+rKNgbfdm/EWnB94tp012Bvrhv2m7H9xfe
/8ISfRl+POKN7x9TdC8SfRnQO5rQz9+ZzAL0lSL5JB+75KTgS/S16nFFV3zb
PCNNR8Aafe0kSMFvLqzEumtqYujro/I+8QTo2gffEejLL+DH9FfoumF/wtGX
c9bqF9i1Gjnq0Ne6Uo5U7JRn5j30ZZK1ee8D6Mo7QobQl4n++ZYv0Mc2WVui
r4fil6sfQ1+zwWEcfQkFO0mPQv9bcWcF+ip3q3Iqgb7pXdO8Gvha5ryxuRs6
a5he3QD4Kul4ym3SPs8I0zSXMAZfbApW5+9C32LEvswIfIXofBFm6Z1nHOLY
IbkvjkbJzqrOFjuzEukK6+LDdeiUYL5XSZ7CAoMZyqa4tuM76bjBXaFfn5VY
JXKBc6niNFnVM2ufBvsnXWn4+ywvjKTLyTsMwfqa/47/Eb10i1x7ck1BoPIC
I7hxLDm4cIJh1XHlqa8eK2FopljImTrFKLFJvBUK++9UEXML2UYjrnjYFp2B
/XOy/a7NT9OIWdl6fms4f238kkfvwZc7i57vTVif5cKuos3gS2X8SFUp7P/7
ermdNviyFf8qjfevl94RqQS+GAcUeZOh39nkbGUGvkz7r/8egc7HHls7AL5G
rc+fxPnbKM83oS+mx0Atzt+gpscXfW0VPViG7+eUv+IK+ipjPZ6M78fdkz03
DL5i9LVXYeflKrNBX+I+oVPY7664FY6+hmVYetBPuO2JIvT1g0V60U9knF0Z
+tqQp5q64t0yokWm3gZ9aT5e/k5tEzfBcd9bFH0dC5muwd6nW2qKvuYbjXOw
hxXwXUVfJsfqBbmhzyf97EFfsqMeLthn71Kh6Kt37/JR7EUbR6VKwdeVWdVI
VegOe7/woK9Xqkr3+KAPSK8rXw2+klR4e5Sgb+koMcwBX6RyTbMErs+a1aAJ
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
zA==
                    "]]]][#/{19.9973051050136, 19.993373334445998`}]& )[
                    MousePosition[{"Graphics", Graphics}, {0, 0}]], 
                    CalculateUtilities`GraphicsUtilities`Private`scaled = 
                    MousePosition[{"GraphicsScaled", Graphics}, None]}, 
                   If[
                   CalculateUtilities`GraphicsUtilities`Private`scaled === 
                    None, {}, {
                    Text[
                    Style[
                    Row[{
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     1]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 1]], 
                    (
                    Function[{
                    CalculateUtilities`GraphicsUtilities`Private`a, 
                    CalculateUtilities`GraphicsUtilities`Private`acc}, 
                    Quiet[
                    RawBoxes[
                    ToBoxes[
                    NumberForm[CalculateUtilities`GraphicsUtilities`Private`a, 
                    Max[1, 
                    Ceiling[
                    RealExponent[
                    CalculateUtilities`GraphicsUtilities`Private`a] + 
                    CalculateUtilities`GraphicsUtilities`Private`acc]], 
                    ExponentFunction -> (Null& ), 
                    NumberFormat -> (StringReplace[#, StringExpression[
                    Pattern[CalculateUtilities`GraphicsUtilities`Private`s, 
                    BlankSequence[]], ".", EndOfString] -> 
                    CalculateUtilities`GraphicsUtilities`Private`s]& )]]]]][#,
                     1]& )[
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1, 2]]}, 
                    ","], 12], 
                    Part[
                    CalculateUtilities`GraphicsUtilities`Private`pt, 1], {
                    1.5 Sign[
                    Part[CalculateUtilities`GraphicsUtilities`Private`scaled, 
                    1] - 0.5], 0}, Background -> White], 
                    AbsolutePointSize[7], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt], 
                    White, 
                    AbsolutePointSize[5], 
                    Point[CalculateUtilities`GraphicsUtilities`Private`pt]}]],
                   TraditionalForm, Graphics]]}, DisplayFunction -> Identity, 
              AxesStyle -> Directive[
                AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
              DisplayFunction :> Identity, Frame -> True, FrameLabel -> {
                FormBox["x", TraditionalForm], 
                FormBox["y", TraditionalForm]}, FrameStyle -> Directive[
                AbsoluteThickness[0.2]], 
              FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
              GridLinesStyle -> Automatic, ImageSize -> 250, 
              Method -> {
               "DefaultBoundaryStyle" -> Automatic, 
                "DefaultGraphicsInteraction" -> {
                 "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                  "Effects" -> {
                   "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                "TransparentPolygonMesh" -> True}, 
              PlotRange -> {{-10.01385498, 
               9.983450125013599}, {-10.0132156498, 9.980157684645997}}, 
              PlotRangeClipping -> True, PlotRangePadding -> {{
                 Scaled[0.05], 
                 Scaled[0.05]}, {
                 Scaled[0.05], 
                 Scaled[0.05]}}, Ticks -> {Automatic, Automatic}, 
              TicksStyle -> {}}, TicksStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1]], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}], 
     XMLElement["states", {"count" -> "3"}, {
       XMLElement[
       "state", {
        "name" -> "Fewer points", "input" -> "SlopeField__Fewer points"}, {}], 
       XMLElement[
       "state", {
        "name" -> "More points", "input" -> "SlopeField__More points"}, {}], 
       XMLElement[
       "statelist", {
        "count" -> "3", "value" -> "Slope field", "delimiters" -> ""}, {
         XMLElement[
         "state", {
          "name" -> "Vector field", "input" -> 
           "SlopeField__Vector field"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Slope field", "input" -> "SlopeField__Slope field"}, {}], 
         XMLElement[
         "state", {
          "name" -> "Direction field", "input" -> 
           "SlopeField__Direction field"}, {}]}]}]}], Typeset`pod5$$ = 
   XMLElement[
   "pod", {"title" -> "Plots of sample individual solution", "scanner" -> 
     "ODE", "id" -> "PlotsOfSampleIndividualSolution", "position" -> "500", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJxV1Wc4F+73B3B7r4+9ow8S5SNkhftNZCWb0CJ7ZGRUJA1F4kuSSEmRUhLZ
ldEgFdGyCg0qUfYMf7+H//vJuV7XOee6znUenFvWI9jOi4GOjk6Vno7uf/H/
vzGSb5ncHZAyZxBU75MsuupQavOq2YiuVqDYpv/lT9zrCUgRJYUfJ1Q9Vh2+
YtkXkKJIzraX7Hy26rqJxpGAFG3yqfVqegL9GClryFIITDEjHsN/L/ExjhFz
5nnuoJSdZL2BxTdpljHC8j3yTkiKL7E+0nhGg2uMcMtHyx5LOUTEygtSjEVX
65N3LlSnJJCbIe77FmljxEA1w//af5fIBtp/y/27x0iph+Zek5zbRGn78Y96
D8eI5kuBQSPOB4Sa3PaIl2uc7IuwErylUkN0tvaw+TmNE5Oh6iM3+uuJlHCj
xdHr4+T3uewaScGnRDTu5vKnwXGS/bdDze5EE2FYuTlySnmCNHEk39//s4Uc
yBtdWQ6cINX3mfypkq0kvTNq28fCCWKQdCQ727qd/NpXxZk4OEEe7ZDQLZzr
IPfMKtgCpCZJ1f1Hyv+uviMRZxc92+wmSXiu+HH9kA+ki3mZyz1pkhQVVH4v
WN9J/EyNGPjrJ8npfMvIb3zdxMl/Rk9oZpL8aPxVtjjXQ+K6ouy0ladIuplQ
SH3LJ9Jn+6RCdtcUieUj+wxb+8gUT9+lnNQp8mcxw4J39wChbJn+vaFxilCS
Wep5gr+QUzc+pUZOT5GTGhXyz09+JU8SdNQuKE4Tz9lwz6Dkb2QLEl4r75wm
UTM3BLwqv5N9o7+km5Omyd3gl6Lt7weJ5DMxXcqjaVIT1z42NTNEWqLThrJ+
T5NJ38Q2qv5P8lLlv21H18wQptQmAb3Dv8jAIWYBG5sZwul/iaHt8zBp+3vL
9UX8DGFpKbX1tBwhzyuUoqZrZ0iz5IHGqyWjROvAIVaz0RmifpHFe4vxX1Km
kK7TJDdLJNcc1w/yHSNayrUf01xmSVWp690rGuOkkoI3HimzRC6pNMxKeoK4
LDMGc7TMEpFeFfVJptW9Hu5jVKWfI7Pp7fROPKt7c5BrfU3miNdVnwNGwtPk
3AiHgkTMHCmMzUucWD9DLD7bMCvVzBFfpeYsB/9ZcjDq0WjH0hxZL605vHxn
jvyy0pQ8iHkSU5jgXCu3QKxZ9EZbkubJJu3JDUZVi4R/gr/VsXuePKp/yu1p
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
vljSux1P34TPbd4R7MZ0hvupHtvk5XXwf8ySXYc=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13521085#1"]& ]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.3], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox["y", TraditionalForm], None, None}, 
                    DisplayFunction -> Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox["x", TraditionalForm], 
                    FormBox["y", TraditionalForm]}, AxesOrigin -> {0, 1.}, 
                    AxesStyle -> Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "(", "0", ")"}], "\[LongEqual]", "1"}], 
                    "}"}], TraditionalForm], PlotRange -> {All, All}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, 
                    Ticks -> {Automatic, Automatic}, TicksStyle -> {}}, 
                    TicksStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]], "\" \"", 
                    GraphicsBox[{{{{}, {}, 
                    TagBox[{
                    Directive[
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1]], 
                    LineBox[CompressedData["
1:eJw11Xc0Fg7UB3B7Pp7skR0hlFIR4V5EWZnJaJFkhgjZEtnJyCwJGdmrROpR
KSWisvoZKaLsvb3Pe97z3n++53PuPefe/66orZvJFSoKCoqTlBQU/5v/V7Pw
/+n66mocLzmFggy7727NgLKiC98hsr1Cp5htN2eA7yNNvg7Zazt9j7zJLuie
P2hL9r6bg14KZHfFPWjwI9v6gdwxhfUZyG9R1koi+7FCE6vv2gxsF5Pan5Jd
ORW1vUF29Jdyi7dkbwa0Sg2S/d/nh0mRlLMgX9vO/GphBmz/zqSxUs/Ci2Nu
S5F/ZmCfmu4vIbpZiOB/OKzWMQOGfqQ7Rwiz8I+FY+VYNvm+mvz4E7yz0NpZ
7YXqM/DE3ebShtws5L7RO3g4bhpk5e5uD52fBb6FHYcY9SmQ1g/tVmmYhUaj
sCmT//6CWFx74y7CHFi3bAQkUk+AkmY/g6P5HLz30O94c/MPCHKTdAMfz0Gp
gCW7E9MY8IY82f5vdA4mqmtLO4d+A9XOk8nbMvPA/rk+u6D5F1zLmdrZdpkH
/rhoHvWPI5DU46PdXTAP2U6HVUhrP2Hi0jPmqNF5KGVR4GqX/Qllp2oZnAUX
4KtFD9EoaBhuRG/YtZsswE2VvWmOpCHopd0m2MQsgPCohJdj+CA4ntSgYn+1
AA8sfHveeg6AudOyCtfyAqgSUrm1Lv4HIb0+JsdkFuHc2sPeYpsfMGjcXCt6
bhEK6VsoD4T1wyJxMC0rYREOGTs+sM/uA7bjS/9kSYtgkamptqe7F27n/pfg
vbQI7U9mM2jpe6E5Ukk+WWoJ0iRPQJZWDxzHyDYZiyXgN9FnEEnvhktTE0Lv
Y5bAqK3+3cTodxB4y6fM1rgExlzHIg5qfYdW/3tj6f+WYDvzUJt86Tf4eOCu
dqDwMqxyt3BREr/BsC8th5HRMlTaOLYrBH2F9plCqw/hyzC8Psyz508XvKuV
9ll6sQydRxsMRc92geI1X/pTU8tg8aDvj8q3TqiSSFJqEV8B0nynVbtOJyjK
vOi+Z7kCb/Q8ws0/fYE6NuywjV+BpxXmtyaMv4DlNrUbU+sKZAZYj/951AHF
NwepD1Kuwsq62IR5dTskmYl/boNVKOVQHftU+xliJ5kk+ANWIXhvjhZ3Wxvo
DhjRStevgme7w3ODiU/g6dM41bm1Cn03LvN0LH2ECQMFAU9cAy8m3WY9zo9g
SKcy1RqzBvoqslcMRFuBfZ7985m+NXihqP6y4vAH8DJVvKO7dx0yU27beZi/
B69rn+xFA9bh6Xp0VLJ9C4hRz3/c7FyH8lcDXWoR78BJkWh/UmYDimhZ0v2K
3oKjd2lIU+IGtG/0yoQ/fwPpUd6S7usboMDgeuPZ92Z4e7ZdZNFzE2yiDyjZ
D5CgrerAhsTyJgjsITHpjL2GRnFqscP+W5B85uHswdVXcKMJ8zp3b8PTyXjj
7PmXINu1t96etA2K2cdJEzSNoDHP+3c6bgf8nrjLfBiqh8+nx1+vKVPg7l2t
fW+qn0GW8XPnlHoKvOr3Izg4oxbSPkyGaF2gRFd/wmry8WpwE9YUcCfb7HUo
HQ3ZgvVt9Rlk+1excHoqVwN3vN/GDNk3v1vLGitVw1CpdnrGRUrMr3I3ZlGs
Bi38ojZ7iRIH0N8pXL4afsSIH35wmRLXakVee+2rBvmMirYtB0rsNCo+bshT
DTqeBnv6PSmRnWs5a2q+Cirl6gypoimxSi3hZGFRFUSVd+RKP6fEVw7Vtya4
qkCNxJLyUYAK+6qvWtwZr4BySv2pbbJVj3y7MvenApSo6k4dFqTCEjMvN2uy
c+4SGbPIPsoPPnJjFWA321/uKkSFBq6xFj2/KuCn6777bCJU+HHnxgWJoQqY
8xt5by1Gha0r+6xJ3ytgq9i/a20fFdL9EOmYaSb39/XKnlekwo2M79d1HlSA
5KMbVi0mVFizHm9aYlwBzzstxQ1jqTB2vU52t0c5XHj+OT2a7Ppt35ujbuWQ
JqbG0UL2Gzrxpopr5bDfkptdNY4KFayY5U66lIPmegXIxFOhD+NGqefVcng7
tGjFkECFj3i1eD6dLweNlNHkd0lUGEgUN/TULQdR0o+D+plUeOqaXHKtGHnf
ospCdDEVMpk/+SzVXQa6klss3a1UmB0vnyugXAay2e5pP5mpMfPzZuraVgns
t/P4J0OgRjFGV4PszRLguh14wptsEnGeSmujBDKzGhiYWahRa/K3a8JqCbws
nOg7QqTGUGFedcmFEng2PZwdxUqNVzm4PpqNl0CPSv9rRS5q3PvapqusqwRS
VMZjnghR45clVRmrghJYyF6c6jhEja/jGR2djEqgUFNM/aIlNQ5n6qX9e/QU
AhJea02UUmPwJofsH5Vi4C4we6leRo3EvIcMwceL4ViKtGoG2Q8iEnq4lYth
SDrnjF45NT6yMtDXViyG8OyBidIKatx3JC8+71Ax0H6ue+RVTY3dprm2FySK
wXSa1Zihnhp3xt0ufthVDClO71l03lLj8coK9tSRIhD7qpUr/4MaqddejFBE
FoGUWNWnBiYa9JeqnKbtLISlGb57jh40WDZ84+7XcwXwLDUxvZ3s+DVObU/r
ArCqsSo5fJ0GL5kSttitCmDl8s/ZLbKjovydTc4WQLoG5XKiFw2WauVpdxoX
gPJ+o/kmHxq8Uh7c265dAHYKZiShIBrkW9EL/nCwALgJ6tLb0TSoUySdXUZT
AKdsWaognwaDVT8DseQJ/Ag25//3gwZVUldodq/lw9O1YlwyoUWuTedvirF5
8Oyvg7+nKS0GfI8Pb4nOA6JPxLs5sgtdU2XOROXBZsHUnWkzWpxVKDpzPSIP
0s62vhs3p8VvzNsCJSF5wGf6QGrYihaDBrhMBG/kAWFsPqfflhbj/B0lls7n
wSgJBHeu0+LELcP863J5UMnuFkRIpsUjY1R9vF25cJbEmOTWR4v7NwJ8dbly
oZXhiKm5Jx0acFW1/0zMgVuF0rGMXnSY9nRnRvFeDjD0WY00km3Nd2s57m4O
LEtEjol50+EP3r5KpdgcyCaunl7wpcPGD6Teu+E5kMukUpAaRIevtZmWFHxz
IFliq2o5ig7DTONpQ8/nwG8zP03WHDp8Lqy9vCWZA9w+5S9JX+jwiP2JCtbG
RyDwQ4hQoUCPRYt28k7N2ZDXcN8tXJEec0rjkpebskH0I82G1TF6LGCsf3er
IRt2Ulai6JTpsV/Z/F5GTTZ4T+ZFXVSlR8JqQPX7J9kQURrBz3eCHulcG0x5
YrKBSbfgd7ExPT7qr3sUbpoNTePMHPqu9HjbY/Qs3e+H8GqjOSL7CT3eVFCR
MqF+CIMvu/b67GFAwaW1eg/lLLDc52MbIMaAvHPLkV8VsmBBxK43VJwB/Ucm
KY8ezgINH2f3OAkGtNv+OrkskwXUTn6mBdIMaDNXUOctmAXyfM1ro/IM6OUa
q+VFkQVyjGOedzUZMEpFetaxJRM8NF9HpV1hQNZGCdFx40zoEwhvLi9hwEze
9quX7DPg09ocIekUI1YfP1o/F54GZQkzDkM6jHjRkn232K006HwjJCirx4ha
HGb8ZkFp8Hi2Ir7FgBFTT0ut1HingRTlVsaOCSPqJVwc8LiaBi8SefxvnWdE
demczd5TaaBH/BXfdp0RbxeHlGUwp8F3K/mTAQ8Z8V5HDVNaQioMF1hkZa8z
4k99hx7n1Psw4yq152ArE3JYMh/eTkuGog6ey98+MuF7oTcbcinJYOCULXWz
jQm5B1S8bO4lg+PaA423HUy4lJPq8CYqGb7qXH1xqZsJ7b2dCWF+ybDAnLNW
9YsJb3j71E5bJ0OUJTepaZsJDWZjCgOFksFZrrcmXIEZt0VjOplyk0Bd31ze
vZQZdwkfmUstTISOkA17m3JmvOhe1peflwjNu9tPm1YyY+8/sZjqR4kwutKl
pFTLjNWm/xTb0xJBPA+iWV4y43lBPQ2KqETYf+C9f28bM5q0BnmaOiYCzfBQ
//okMzpw772ZtS8R1KaKE+LkCJgjZGznUXQPfladPjPeRMC7Kz/oB/MSwLGJ
bluTRMCGqvPlpEcJcOu3R96jNwRM2Zmcz8tKgBF5y6lzHwhY2Mal6JScAA11
h27/7CSgX4o6x0xYApQaKrnwjxLw9h0vuQHbBHjCOBl5lsCCyq1F264iCcBt
lzgucoEFe7SDi/8duQv5cmqVxaxE9NPi2DnKEQcyPsf+5XAQ8bPW+wNJTHHw
eOBtbgY3EZWNP83PUMaBgaPs/QQBIpaqf50smI0F4702BfFSRGTsYX+8qz0W
hELqar4hEYfqjhwqi4yFNbS7kHidiEzZPIobmzGwyi93QPYHEe8FD3QMj0RD
jYfNY/63uzC5rtN4MycSVLTS8xk+kM0gQNGVFgmfDUF09dMuZLowcCf/biTY
112IHfy6C71NzRu0AiNBI6MrqPXXLpw+8OWWr0UknHMcV2OhYkURxyjJNiJ5
3vCK6kUxVpzkCxe74HcHtljK3a84sWK1VrNcnUEEZJ2WrH3mwoqa8jwGKici
QLvfMZ/ZjRV7LURbXytHgFbG93vPPVlxjTVC861kBPQf2P4uEciKRFFvoUrK
CLgvIrhsnsCKSj32u47XhoOpy3YC93NWXLoTX3KaPxxIrdWWRSxsuKSorPdt
JAzK0n0j/VjZsLkwmG65NwwYLr3kPM3Bhi9OXyZwdYSB5UkP001eNrxI7yGt
2xAGIeVjrTfE2XDntBlfUlIYzDcSl4eOs2GIbYDJtmYYyNP8SC91YUP+3EZh
u9xbcI6b1fNgDxv6l5trnzsXCkoW5WwN/WzYWJ4wSGsSCjWbHho6g2xYGbJL
uPRkKCgo0nq5j7JhXnDM6QX5UPgzN/Dx7wIbnmbhTj7DGAp/hx/KpbCx48S+
pNq62hAQvi8QtWTIjqD9cqCdEAL0poNlX/vZcexyC7HXPhDkCEXHwobYcUW2
I+GXUSD0D2PRsd/s2JH8TnBaORCkWER9aqfY0fedatYGMRCmmnINVyk48JHx
9ameugDo6OS8US7FgYVNZhEatAFgvPNLxiyQA4P/+gs/fOAH8cKcnoO3OPAK
i67Erwg/WKYQqnaP5ECFUTMjQXc/YH1/yrM0iQMzmkdUEjT8oClcxjG6mAPP
x9d80P9zE+hpt5ZG+zhwpPO12yG5m8C7KDnzHTiRSWq0OLbeB5zG3CvitTnx
2vuPIlM5PmB2YvWViQEn5t4WV9CL9gHb5SCLLStObNI5cWbFygd2caSYD3tz
4ljMVb2vG97A4igXtV3BiZddHEJXjnvDBx15ug45LnR+Ma+uX+sFkwl7e9SP
ceFJZx/d8CwvaP1QXPsOubDq0lh1bZgXBGX+yqE04cKdoPpBookX6N1PDjW+
wYU3ebn7NKc9QXda9Fv8Ky7c/zreKVrcE/LS37t8suPGPij+rh/pAatfVFNW
3bjR7xyNmvg1D1j8M02v4c+NQ1IUseOmHnCg//prmURuzGKp1JQX9oDyFKcX
jiRutJqJEj9X6w4x861rnBI8aPDO4K3LSzfYl7SUr3eYB4+rUYvr3XGDFI+n
GYXIgzTCH9OZjN3gWt5u315rHmxQ8zZc/XUNDkgxOksm82D9GKEvluEa2MnV
rJ1h4UW5i2vTI7oukFbKzXdBkBcrCYdNUtldQJE7OTBrPy+SDAIpufud4eyq
iSLpNC+a2M+5pzg4w2DqqFlXEi+WN0lSvA9zAuvrLt2B0nzIkmT+T7jKASYL
bPzz1Piw8kz5uKSPAxzZ2aMoaMqHpZlHj24dJ7vtxXliIB/+vj7iM/f2KnS7
J8wf+86Hg51Fw5nf7EFjdynzlfTdyJ13mTJgwg5cUo95EWt2o+zzQ6GbxXbQ
+GFNGDt2o3Fwm6ulix00ezZZG9HzYxTdSrHI9GVgyLKyIQXxo8GnerGCaVtI
bWQ1OfWQH23DQygpy2yh9cyXL3ea+LG1oJJTyNUW/Di2dI0oBdBhf43h1b82
oPbgHhXFPQF8LJ3Mc/jnJeh49l+ExjMB7NGonNp+cAliWEQyYwYFMETKhSHa
6hIYXd5qunJQEKuhuPBZ3kVooYuY/D0iiFv5v8zi/c6Db1/BCgWHEP4NbM0h
TZ2Dk92uOk9PCGHYVRkmk0vnwCiIaYy5VAjzVQWcdTSsYaX+XYN0ijAyLg50
UaxbgL70qaL/vgnjyKWvnYeuWMD3V8TEJGYR9DsYceFgx1noVeKolzYRwV/v
7m8eyzYHGSV5hl4fEWyUuZ50htYc1OlabHWyRVBYrJFm0/EMBLNxcQssiqBJ
WfTCgwNmoNLgqDQgKooRW3RCt+NNQeWc1AFxE1H09b6qXjFpAooukfutGkTJ
/4920DvXGHpcfuybWxRF6tbmqi8bRuARMM5yWX4Php9782Xd2AhEV+jTx17s
QVo90VytaQM4S98ep0kvhs5G6hOmMfpgZSTRImolhqF8fjx1e/SgtXfGMKlG
DEk/jasTq3WgNq7bZZZHHLtePhF5qHoKrPf2XZgLF0cC63JixyttsBWP8ftG
sReNSDE5N5S04NC/Ab30mL0YLt7QElmkCdeCaFQvSksgqU59LoOoAdcTHWJp
f0mgL73oV8mrCGFH5Yp0miRRcirycKGNKkSOmEXPtEqhUAzNP6dOJbgZNkI8
LyiNtlnSY584FSA4k/Lmz98yKGV5fDVUSB40LNaG6sIOYG1p1x3RMhn4qUdp
HZp0CN+f8ucj8O+By2K22nv3KuHlh6JWxQ0M8D8oNE75
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13521117#1"]& ]}}, {}}, {
                    GridLines -> Dynamic[
                    Map[{{#, 
                    GrayLevel[0.7]}}& , 
                    MousePosition[{"Graphics", Graphics}, None]]], 
                    Method -> {"GridLinesInFront" -> True}, Axes -> True, 
                    Ticks -> False, AxesStyle -> GrayLevel[0.3], AxesLabel -> 
                    None, Frame -> True, FrameTicks -> False, PlotLabel -> 
                    None, RotateLabel -> False, ImageSize -> {140, Automatic},
                     FrameLabel -> {
                    FormBox["y", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "y", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm], None, None}, DisplayFunction -> 
                    Identity, PlotRangePadding -> {{
                    Scaled[0.05], 
                    Scaled[0.05]}, {
                    Scaled[0.05], 
                    Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                    All, DisplayFunction -> Identity, AspectRatio -> 
                    NCache[GoldenRatio^(-1), 0.6180339887498948], 
                    Axes -> {True, True}, AxesLabel -> {
                    FormBox["y", TraditionalForm], 
                    FormBox[
                    SuperscriptBox[
                    "y", "\[Prime]", MultilineFunction -> None], 
                    TraditionalForm]}, AxesOrigin -> {0, 0}, AxesStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                    DisplayFunction :> Identity, 
                    FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                    Directive[
                    AbsoluteThickness[0.2]], 
                    FrameTicks -> {{Automatic, Automatic}, {
                    Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                    Method -> {
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "ScalingFunctions" -> None}, PlotLabel -> FormBox[
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"y", "(", "0", ")"}], "\[LongEqual]", "1"}], 
                    "}"}], TraditionalForm], PlotRange -> {All, All}, 
                    PlotRangeClipping -> True, 
                    PlotRangePadding -> {Automatic, Automatic}, 
                    Ticks -> {Automatic, Automatic}, TicksStyle -> {}}, 
                    TicksStyle -> Directive[
                    GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                    FontOpacity -> 1]], "\" \"", 
                    StyleBox[
                    TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"y", "(", "0", ")"}], "\[LongEqual]", "1"}]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Right}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], 
                    GrayLevel[0.3], StripOnInput -> False]}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {{Right}}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxItemSize -> {
                   "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                 "Grid"]}}, GridBoxAlignment -> {"Columns" -> {{Left}}}, 
              DefaultBaseStyle -> "Column", 
              GridBoxDividers -> {
               "Columns" -> {{None}}, "Rows" -> {None, None}}, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{2}}}], "Column"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Sample solution family", "scanner" -> "ODE", "id" -> 
     "SampleSolutionFamily", "position" -> "600", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{{{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJw113c0F+73AHDeNtk7WxIlEkLGvREie6SMEKEiSmVk77JHZGQUIuMjJUoK
hbKyR/ZeKWSE4uv3x+/55zmvc+695/nn3nsegSsuhlcJREREmcRERP93//+5
6nZczrC2HfRbP0Ymxu8pixbZU3oMtcP76tNRifH0cCfunc3aRjvc9BOOSYzn
g5wfJXbsRztANrQnKTFeAv7+0yuef9AB37esktzqJOGw9IvJ4qwOYPYbHU+v
koJ/XXGTJBUdcHzpndevYllI8j295jHRAQ+z48oT4wH8uanl96Q7obtJlWS0
HkHoaKddy7lOuGR3psit7gz8uDkseN6iEyYlJ/fSq1Rhy26y1zGwExrMH5f8
KtYA0wL2bqfmTnjKGHjiUbweMJUbKDoZdoFpmPVqooY+pHCIb9td6YL+1l3t
0Xp9eJR+XEzidhcMMjSS3KkzAJfza+uKcV3gSLzq/qTKCDiD8O7l1i7o4qfz
XS42hQUj2/Bk5W6Y3FXlTo63Ah+pxIlj1D1gQ9HX4EppDVyc5tE0bD3wfJGS
KEnDGu7QzdzrFuiB838W3MbqrYFIYir9kHwPGC8O29yts4EmoPhVa98DW0HH
L2ZW2YLB+XBO7Q89cH10uup3sQOYfWA6kmzdC6+Uf1FwLjlAS5X8jML1Xlhc
LTNWFnMEuVvFXZ1uvYBUt5bDXziC1cK19b7QXpCo+HeC9/k1SG9+rXS2qBem
r1L0n8u6AWTKM/Zf13phJ0C3OSPeBUSbP/0X6NMHr/XNT37ucIEnEVEVlSF9
kL8h0XqH0hXaTbUuTEf1wXO+olOpGq5Adww/Cmb0gXL4E/rpelcglmL5feJD
H8gMKXz3qrsFmauW4v/97YMfPXwDeVVusMhuG/bJrR/k/PVeEZW4w1Q61Z+f
OgNgzG4dldDqDvdpid9aGw8AK/1RR+Eld+hMpZBsNRuAE3+W+LTFPMCeydIl
yWEALibpP05+4QGaD5eUFv0HgFPiYrH4c0/I6mT1zSsbgHbFoy6WWfeh4ORz
pmym7/DSJTesOt4PbJt772g2fIel1oxk/TI/4KicGyho3jdFTP5khx8oXqb4
Rt7xHfx+F84EU/pD19JnnzeD36GLy4ixUMMfjkRevr+0/B26j4b6btb7g1dz
oPqHg4MwRT9UFVsXACbsyhdonAbBLuX48OeqIEgSZSQ/RT4EjU5ZcdIlYfCf
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
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329037#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJw11mc4Fu73APDH3h57RPae2bLug0REZjIyMyIyiuxHhQo9dkmJzGRHyMge
RUWIIivk+UZ2Zn7+L/7nzX19ruuc675fnOs+h9/lurkbMQaDcSbCYP7v/P9w
C5RWNW+bRtqz3QlpKUdaNuN7tVQd06hsSDsxLQWLqI2pE1o7p5FjmjQ+LYUX
+arm80r1TiOxrImMtBRZpHz99O7ex2kU9uZxbVoKQmaVGMZbE9MoVeT+qfSU
C6jhh6P35vY0GmU24n6U4oiep/4OZJeYQRsZVh+yU64j1oaPy0v3Z9BooIt8
5+B1xLHYF2sTP4NM8AoDNyj90B5bfGlvwgwK6q5QfqLvhxLOdD4vwM8gZ6Nc
7HyXH3LmbJaxTZ9BRGPoW2i7Pxq/E6FWnjODqHWFxgsbA9Ep+10L0roZtPvJ
8jWmPBjNuLu/DpmdQc13S+OaU6LQtZSw7xilWURPKHhkWh2Ffi6V0oHyLBKS
zCieG4xCDtRpK5Eqs+hUQsXCXUoc6s280Lx/ehaVtV9kfKWPQ+tzpGlrWrOI
ZOV+5N8uHHIhWzX7aDCLWmimG5Pao5GzYpizsf0syiCXn+xsvIPO7pEMed+e
RSVNBcmK5XHI20ir2v/DLJpwGQ1TTcUj0ns1hUHmc2g25XYTcR4emacW5QVb
zKF2eeF//dV4hLX57nfLcg4ZlV+46zyER53f7MJDLs4hxhhBky7KJPR2nts2
xHYOcUanR6zoJ6GMfFNdP5c55F3NpKHdnYQwu+KO6gFzyG5t8cyv9mTU9qOZ
xyj5+L6dyjWNplSklHOV2X9gDsVkJrGSVjxCxiUvDWu1fiKZgishQunPERPf
u7Sr1PNoVblXsvbZc7T0osRXlWYexfoZT+kVPkdGBn7SFLTzqJi15ZxH3XM0
m1dqk083j1TbQKpk/DmisvjuM8kwjwYVKVk4sDmILSMpwZB9HvnXREVmW+Sg
Pd3YHwxC88hov4itbCIHNX1VfX5Bcx4RBVc9HlzJRZOnsrnzfOdRwqdkajXm
fEQUVcdDMjCPDE32ZzLti1Fs62oRf9gCat/xfjXnVIzC9mUle46tqN90U9qt
GE2fKci+Fr6AuHwPaNt8ilFVCVysi1hAPspHer8ii5EMQy7ledwCKtKTm1XO
LUbYcOWIgJgFxENl3zk8X4wu4udaXuMXUOxPf1Xm6y9RRuO1q5T5C0ik5YtQ
VnQJOlg5AEz/ArIkjVMdLyxFbGMucVaciyjAbXUQG1KJZOuInrSVLKIM/uTz
jGGVaLpRWuzMq0WUslzbwxRRiaRdTpd1H3tqK/4da3QlKhjayvpQuoiyE71r
ue5XItsFGdqR8kVETEnxVjSzEmm8OlRdqF5EIdl8otBQif5Qjn0kalxErGpe
aQG7lSht5Q/i+bCIXs83fJ0MqUKdcUy9K4RFFDyU+fNjaDUKvsvYSyT+C+Xl
xisJRNQg7fJzTiHPf6Ec6scL3XfqEdXrrd8SIUtICG803BpTj6p56YSTjk33
s6n9bVw9ShhRubR1bEvN8dzy+HrEGtlX8S50CS0473lmpNYjBrcVQcvwJRTL
8vuEe149Ej7TwRcetYRaZffoyDvq0ZurDX69MUvoJI2EogFxA2p3jHpgnrKE
/OIFn47gGtDtbfUC6VdLyDBauJY18i3amSFwUUwsIVx02bxcSBNysXsWEKVG
QNryNjWUp1sRV+6vGorfBCT7Q+LdaXwnGuWdv9Ko+xth8Iz9JIW9aP7eBxpD
h2WE5/YNrxEYQPl/LTjFA1YQ8bdMv6GBz6iqYYZQcfUP6sWNXer/PYSWvU1c
JPhWUUP9S7vZMyOoBDYYwhNXkVWzv4xC9FeUa3wnQmplFSVZrw1zvBtHSabf
kr8brKEaNMO0ozmBpM/qYiKK1tDPRloFgbwfqOAXfmjhYA2tEz/jNS+eRo2d
jd6bF9fRFdWdmFzSWRRGAjJWZevo7MMBL32rOSSarBAWdbCOBmUmKIc+/0R0
i4y/wWwDRU+O6snoLKCQpqTZV883UDDh2sGPn4vI1P6TqM7mBqp36zFZSltC
p5TCGc/qbyKXv4RxCs3/EKXVx++Y9E3E7eiW0S6wjI6k7P8sL22iiEc/aKtJ
/qA0kUGcqNoWejf4/Td/+CoSxjInHt7fQpIK1ecFstfQJ2pC8/nZLYR7ljYb
17qOnvRWPStT3kad+L27dCybSGrdzKApbRvltml7OkduISGR+9Hqm9so7JD3
x42VbcRf5elXYPoXnezeiOTO30FPO+k3xBv+Iqv/7K0UPPZQKbFKTDDvDtI0
2yLUmR4gP5a8v9v3dtBwsH6wW94/VJLMV2pMvItiSXEWSvEYqGngfcMTtovo
1busXmKJ4XrSU10M5R7KwFVOO74mgdyEvpa3GXvo47lPrCUpZBDc1dLsILuP
xi+q7CwdUEDpvoiY78I+Yo+pPrxWTw0mJYKHfQUHaNXY+V+fOz28ORN9ejb5
EPW+7fIZiWMEOY7uaKacf+i2hvmTRQ8WCO3vv7H9/ghNZxU5fG3lgIsKXySE
SzHwNdTuDUM7B6yR9xvZHLvtj66UYQcHJMhNX088drpGZ0BzFwcsEuzato6d
uXvoVfCeA3YflNzvLsPAxEMl2rBhDmhNXavwrMDACPnUKc1fHHBfPsWqohoD
B4yGRycZOCE/oJDjbAMGKPMZ22ycOeH+U72TT7oxEC49FnhIdQLKHmqen5nB
QFK4COW5IC7A5+KoOLmI4MxWHmX7IA+Y8GrKDWcSwZNntauZX3iAwMs/w/aE
COwmTRgCRnhgk2g+3ebYbWloW2CcB56SYemnjl2Nk3GIm+aBadN/qoQsIphe
WSm0/cMDqfETIUTZRJCh8t1Zko4XlAvlSxVeEIGwh35N8DleWCCu2SksIYKe
MnHSj528QPxt2vV9IxEMtASOxrjywZRfUSz9FBF4RHCWPI3ih77GKsmf4sSQ
9N63/wOOH5wN/nLKSxADH/Ys+340P+T+q6PHHVudP0vE9i4/0IyU03BLEoOL
TafUifv8IFuZaGEpddwXg9o/clP4YYJkmatbhhgKlb9gPxfww/xZoYxyBWKo
+kx992U/P5gNqF1N1SQGdj/hGUduAdjjCbEtNyMGGS1TfvtOAVhCCWWqYcSA
4/ElV1EXAuxJL0fR4eP31NnoLGsIwXh4bmjCsa/xNvfkaQnBzS9Xc9aObYNX
qmDUEYJcn1qaphFi8Hy2tb5qIARLFX7OZl+JYTad1qH5ohBsUGnQRH47rveo
OfswQAj6sZ7uU9PEwLom8JjllRCM3j4sb18mBtIuwoVRXmEoMR45i6UkgRUt
k28OnCLwvC4aP61FAhM5C+5j1mLQ5/VG8cEbEvCTOyQxsxWDsrI/VlR1JMAp
WsP33l4M7mtJxt079gfl7PFmZzHIm6vjjKsngSmaPONX3mJAWZl4dPctCeTF
5DtlR4kBBbfX4J2W43z/IP2FIjGg7torSuwmAR3j/C2yPTG4It2+OTRKAu43
D/U/5YtDdM3UusQOCXSuJAhws0sCvVCN9XktUpA/c3KI+Z4MuC+tJCV+I4X4
BSvF6ngZCD37rl3iOylYFJr6m+Fl4Ip+G03vsaMlO8JTMmSg+k/AHPEkKTSd
EJzlKZCBolC1kpApUlDsiZR0bpeBWrVPT7x/koJ/89R84qEMUMTIKzqvkIIN
17nZzCBZKBbcrkwjJoMtnMwYldopoLW4WSwmRQZlSwLO66ZywK/e9uHaXTLI
DD0a0rOQg82ovVqhGDIg33H8mWklBz4qRy0Tx/YqLVvQtZWDCa0kaeM4MuhU
fOD33FUOaqxGI2QfkMHAquTQjSA58FWW3tjFk8FyfnDWk6dykK7zOrAwiwwm
f8fIzRDkoKfvxh/H12RAev7Wx3G8PIQ9tplw/0kGbP30JRQYRYgSiElwMyaH
kKwjN34SRVC5YF6qbUIOVZ4p7BrkitA/VLt98gI5uBJ7XL5Bqwh6BmE0X03J
oX/GFrfKoQinvHOVjSzJYVb44z12eUXQ+hSZo25HDqc2FyYF3RRBeEJcWvMq
OWQ7KrqYflSEhoGyJ90x5PCrp3BzqkwJ0rvlmBjayKHG1T7sQokK9E6pPY3T
poCWeWaewnIVSBV0kH+kQwEnalKs/1WrADHhNXmRLgUUrbqlvG5Ugccdl716
9CjgFZYM5AZU4MflCD4aQwqQ07bVCV1VATGJGodscwpQ2tlH51RVocUgcGLT
lQJO3okyZhhQhV8OvZMecRSQ5b1hwkKnBu/t419lDlKAspvS0sMdDaB/T82B
vUkJSJn64ucjDTge12HpQZTQo0PpxkqhCcFjfy9x36I8/v/8b5SwagId+dod
yTBK0BuVKsQoaIKdVE3OhWhKeKPE1evoqwmyCbvyFYmUUMrDo3i4qAkqKrLV
A4WU8IePW9lpUQs0pBmLHn+jBLFvUWE+DwFeGHez7RpQwUtV0USJVABOwlRw
tyEVrOtYWhEeAdS9FoxMO08Ff9EjpoDcY+99CZM3pQLm/ZbbL2oAwtdT9YOs
qSBNPNb8/neAEM/GqJPuVNAX8JwWJ6kNQivF0ct3qMDrV+Zw4bA2ZN9qbSlr
o4JDklQhdTNd8A5o03h8lhp2Trn4lVvrwrNvAX09BtRA7llBI+KgCw8Fl9GO
ITX8oeDUEfDWBRnXw992F6iBD98hdiFGF9hnD21lLlFDkPy3rsi3unB+554Q
xosadhM9e63EzsCNG45x9g+pgT1lz/OQSQ84yHN4hb5Rw+bolexyGX0Ibxq4
HhVFA7Uxt9Z2VPRBrdnymtZtGnC1nq431NaH7Kqgvn93aWBup6yX1FIf+mnj
Su48oAFOpoj/voTog2eRlGR2Og1kTP7wXOjWh+3T9WfZS2lg78zrL3weBqBr
3IQEv9HArSpF1nPt5yCehFl1Q40WJJIP9Dr3zsO56M+5gUx0wMLBVHSOyhh0
mpMkWdnowIChJWuS3RjUv+EO6jnpQEv46JGckjHMgk4kBT8dxG/smiT4GUPF
D1/DVlk6IErmnOcjGEN+Y6F9njEdVBA5qQcsmcDl73UcuvF0wLQQO3QFbwp9
hGCnR/T0kE5/xDPz2BTmH1sxzTLRQ9DwvInnC1NITzQbk2WnB5y6Vf6jWlNo
tsysHOalB0bJUq3wCVOgbGgmOSNHD8rpC4m+UmbgIOw81mRJD+SZ4riEETPQ
/2fKrJxND0l+H4Sw5hbQOSMqYK+BhctpiZG7Dhbw34PgziRtLNzYfyq65W0B
b26ltPedxUK5cOoGX6wFbE2X/DYww4KZi7adSaMFjJRhasPdsTCnhNngE7cE
i9RK0dZkLKyQ7jS/Y7YCw2jiAMJ/WKA4jQwcZa0haFy/3PISA6hvOY/saVsD
f/rN5Uw7Bij8OmpdY2kNK/z4oFkHBhiL2nS8HWoNjK6ekRFuDFCevVGU0mMN
L4SUGCYCGOBCMElxr8cliLAt6IeHDBD98B/zr3YbmCzoHR/rYYA207ZMs317
uN7/UpnWgBGcmiRcvDguwzsSyduO5xlBr5l5sFnpMryyM0L1poxw083Bh93/
MrxZYYZQG0YIe33y40vCZbh8dL1V25sRAt3yGraXHIALmxtAwDPCgehi4Qu8
E5g6BFlS/2AE7vXMiYIXThDMa2MhOscI7gqX/xuudYJGp7flRr8YAffZbqd+
wgmyvPp7StYZwTZkXqpEyhkY4r+UdlIwQWtA91LXiDO0f7Z7EqLABMxauYJn
zF1h7ovoYUIyE6hJdU+JX3OFwoI80rZHTHCpButmFesKav8SQo+eMcHfx1fQ
7UZXcDAVlXtawgRfvfyaLMSvgE0ws9ulTiaoeIcxX2V2A0EOv7d7u0yAM/P3
j5f1gATeuwXE15mhjMNObdrSA26NseR8DGIGwfH3+2WhHuCb+de+JJIZ5Pd9
3jT3eEByJwV5ykNmsKbtylr38AR9nq9VYhXMwLpqOITtuAqcjHQNpRvMYDyG
Xb6xfw3+4QZoZBNY4Iph1eS0kg98sYz9F5XBAj2fDRXU/H2AQTGf6b8cFjh1
uYi8n+ADFwW/RzO+YYFyL7ev7ARfuN6+71k2wwK9t/dPVOP9IKoq691TLVao
vcau8bPWD7RrXnZ/MmQFr+5G4d4JP9iQvywjYs0K9CFJzA1S/nD9FI4e/FhB
Io9Md3jEH/75XprXzGcFntYjZzPzQDDsiaYRYWGDJB5GnEtsIHS92b61KcAG
NMWUKvjGQDjS8+XZkmODR1uXfJzEbwDbDv1GsikbWDz3vXnAfBPOY418HJLY
IHDka0iGbDAk/GkZT+Vih3SHj9P1ocFwsK2HUZBhh4Udulu9PcFwF/NbgUeb
HaS1nrIdetyCZ4KZ1TMe7LBSeu8dZ0cIuLLMyjs3sINk1lpLxH44lN/5kdnr
ywG5/E0zOv4RIBsZrxkQxwFvfxUmDxMiQGNw2OdJDgfEU0Rw8REi4UpBgUHI
8V4/ys+6XYvHgdN6RBKJLidQW7P9+TCBg3l5qRl5J06wGpX40CQVfTz3MId0
kZzwXxfX168j0XCS0YlovpETfrDtl1ua3wFbBf/bR3ACRKpVA1Ia78DgveCN
wCsnoPtBY4ar+F2QRwfsk/dOQC5GNuyIOQZ+3ZT/r2X4BNzKklXNlI0DbGRd
pVkoFzw7dVvoQ08c3KmRxO4UckGwnVjVkcc9uMNjP8o0wgVSA4rK3B33oUuA
2pJImRswMfHLUfsJcClbsqCd7iR0fhQuHyUkQtvWYDDJuZOQ6j8iLEB4CCZi
36tqYk/C48vkS2/wSYAl5xWTpuYBP/X1mmapZFDS3rd1M+UBH/eKurGRZNDs
4+9Yy+SBxDDiCCvzVDht2lGEVHnhC7u73RXxNDDi/O5Wn8gL2OGryhiWdPjU
6rf1d5EXJBJ0pjNlHwHtKaYc/4t8wPr81gWM52OIo823uZrAB4SOzPfcHZnA
1ZF8ma6bD8KNbvrg9p/CopbNnM1ZfjgzypAlQMgGYQk9Z72H/NDszsFTh88B
Qb8LlIET/KDzcHVhbCQXlF1OFKzKCYBTEGuhlXke1NlsHzIlCYDZ5sAlDEsB
1H+Jc0/aEYDv6tr7mbJFMKWE6yn2EYRPoyKT3B0vYZ0+W+PKuiA8M9q+idsv
hTb6F5jdB0LQd4mSuw5fCX0igV6hmsIQHR6eZWX+GsQTQv9yMIvAy5+bc5my
dRCzXLP17IQotJUKnsPtN8H4l1/Xf/uIgfqbE9etzDug6z57DoAE+Jyjmo7a
7wfJM/J4ETppYH31lypqfwL2aKMiBc7KAf5P/JbjBV6dkyzWitZPo+F/y04D
Vw==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329065#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJw112c8Ffz/BvDDMRKyc0I4opCMkGR8L4QUMjPKiqxs7jRRKhUSUVYUURFS
GpJ0G0loWJERcoeDslOSn/+D/+fJ5/V+cD2/LvrBQKtDzBQKRYGJQvm///9H
27LTZpE+SvbLvY5LTlrW3XmjIeuU1CipX6cXn5zEQ/jnzb8sr/hYt0JCcpIE
CTpdu4dFepToD3ZfS05SItOCvXe5No6SlKXrj5OTCJHpeX5YVH6UFPlfUE5J
2ku8gnQ3qGwdJZOOu8WuJ7mQeE+p9zr6o4Srz6YxKymQ3M2pvfbFbZS0NRbG
VCZFkuQHvJPO2aOEca/9xParCSR3ki7DLMggouPux6RTsonquSNZhiMMUniq
fvPjG9kkjc1H/uGKuZ+afjHMzyZHby+UiI8ySOP+ShOvp9nkC2Xmzs8VJ7FB
oaArmxS9DNhzb4xBnnSwC9J4bpJLd23dOH8wSK1NZESW9U3CnBb0/u0cgxxL
vbO2qOcmMWrOGdlGHSPfuEtTP36/RXxdAnLq1o+RbofE1TsEbpO4dJmNDZZj
xLPq90Dagbsk2f7Zq5ePx0gZy+RHnmMPSGmEzu/swHGy5fj1b6+jnxH7yKzT
L3InyI4W+7JVmq+IWEnR4xNF38lTd/kqzYRa0lcq+FT7wQ8iusjbRM1/QxQF
/qM6Gk0Smp//yTKpZqLhw645XjZJpELTglqaP5CejlcjNiJTJI2z075pvIXI
9rsE1odOESXVe/sHd7aTWb3RoK0fpkjWpmBF1dOfyP2eAN4pqWnCXDrZRqvq
Il91x5Jtg6fJjXP9/As6PaQ85s2jrzXTZNt3TlWp3D5iIZpcSuWZIbeuZEpY
3e0nmV/Lbjc7z5DW8p/nbrEMkrJiQ+mewhmiR232Nbb9Sk6uFds+PD1DqCnd
q1o+DBH3/CPpbmSWnFHrMFTU/0bkNjSciTo/SwyU/P70DQ2TiSCVAymtsyTp
2mvz0eRRwjmob5EsMUdOCDC62HXGyMG+vIvsXnNk3s3jWrXUBKlxkoDn4zlS
EdnL9ZD6g/S9Nh0vW54jMhrd4/STk4TnpfG1YZN54na+1FQqa4rcr9M4i8x5
ott7dTDm1TRpTf5nvfLYPJF4+usst+AssYrOlg4z+EkozfB2i5gjmcPyIQ43
fhIzhnhf2Pd5oiibzZ06+5M0xE5HiN1eIK23P7rF2i0Qz3P7bVW9fhMhttp3
Bc8WiMazGcZTiz8kTT7CR2j9L3IowzD8UO5f4mrkSBu88osk/IiwVo+loONo
6/mTLL/Jsaka23s8zDih3zqbG/ubuC0U97s8omJZOctpXHCRPAhpFipIYoV4
1buPIncXicEa9YXRP+wo3Bpuxu/whyjfL1nye7YaHrMCmy/xL5Gq605/GzzX
ILHM7sLCzyUSqFPj3x7Dh5t/i/r1lv+Se23m6cNegtAunPqex0fBiYs5zp9e
0RCpo6hv1kbBmNe+J7zVNGz39fCOWrF5j67C7hoaxAQeJD5a8XrZqpDKOhri
1S9OrGungPZ1wTfvLQ2NO03fflvxxjBlrhNtNLjPudFOf6Kg+muXss4IDSlJ
KhzPPlMw3rtzeT3vOpiGL1soDVDwy5TrXwe3dWiKH6ft/E6BQ1xL6BKHCGIK
zpdwcjAhTk1ylckRUbysfhBK9JhQ8DdjVfVHcdRvv3Klt5IJTPlFk2mt4vDb
9UhJ4iUTWoaMeEPaxTF3trjVdcWa6RrzUl3iaBVXlh9a8Y4zG51j+lfyAiF8
Y1VMODXyLd/xhzjmHaIbfv3LBDN6q9tmbglEJYUNibxmQqgyKQs3kUDpyVrG
4XdMWFals7yrlYDHgJPP7i9MmNEM7DjnLgn/Db/oVGZm8FkJFmRG0tH291/7
ij3MuJTl09QYRcey0i/pVabMsB2E8OJpOtZw5/y0WTH3TMpGx7N01DwyffB9
xftlqxRELtIxKkYPlDJnRlq6dt+tJDqO2+ZsiLVgBm22medDHh2S/ZMBbrbM
2HuE9ey9Jjr4N75+TXdhhtCQxICLmBQiJxt2z4Qwo9BoN/1ArRRKjCs+j2Qw
o03Wi01DSxrvAu5+y5thhvYrK/0JbWlU/Fks4ZhlhsWmJ/W5utI4794S7b/i
rmTFEj59aVyo4NmjPscM3qzv05O7pNFWymJfN8+Mt3GszpX7pOHmmu4//IsZ
6buLjC6HSIPvaH6KKoWKhkLRVMFCacy9zzAd56KiVP7r3g4JGcyPhPF93UhF
+IjhZ+d1G1HXH9nL6kSF6NEez047WfiznZEzaqXiCtsM1dJRFh++hnbWrHjd
73uSbw/IQjbG9rpeGxUZrMldlW6y6Hw4v1OnnQqNllSzwsOy6P621lX9ExVj
O9JdsyJlETrNkibbTUUoi5/xtzuyGPG6oCT6lYrY1LQ51t+yWJP1rFplhgpN
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
5jL7VdWNVKC0a7q8NpCmb7m+qPKf+Cj8D+gOaqg=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329093#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1: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
z+xOcT2H/wGvYvzN
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329121#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJw11mk4FXrbBXDZ5nneSNjIVEhIDvqvUFLJnBQiCRkqRJkpUQmJxGk4hIqT
HJk1oUIhCVFEKlOU2WaTx/vhXV/W9bvu6/6+aEdOWLszMzExia9hYvq//v+Q
1q2v8yZnSNX6hoTUlJVt/NPx3SWrVhQzvpKawk9qBf3Galfd9VE9KTVFhhgf
vy/Yt+qsL73XU1M0SOM97kPUqRkys5BRmppCyOKZ6uG4VfMcv7QpLcWCLOml
jHhOzxAL+71S6SmHyZP0tyGqszPE99P+t7dTTpBy7+jPBfQZot/wMO5pSiSJ
Ye8quLcyQzzzPoZuvZZEZs33Us/zzpK5YfezCml3SP70w9525VlSyDf5nv9s
EfktZbjh0JFZYsWeMfj6XAVhI02Futdnif4nhxIOvRckYrSnJ6V+lniXbHiu
l/SS7FL4fqaIMUuqrgo1UfIaSMahHlbNDXPExOpEWIlcM/EUvNiY7TRHFq9k
nmxrbiUKYVl/702cI43m3QeaxtrI5wPxB4Wr58j+7PxDAyYdhN1N6ZrUzzlC
6vzVtaI/EpeJLS8zqfNkMmSqXfx5N9lp7B1DMZ4nJrEDQnTDHvL1meodZv95
Ui3PpyV39wt56Hyoc+DWPPn95paM9f1+UpNzx/3v5nnyQXQhNotlgPCJjvnW
LM2TyOiW46Z234j/+bI70ip0MqLfy9HW+p1808k+1uJAJ2qsXTvUjQZJZ+Bb
nZ9xdLKi6bf05fsQqfjH9e/XVXSi2NqwbyR1hASJqek2jNOJ7IWxbnbDn2T5
8Y/ICOkFwi7pcb1WbpzkiNk2PbFdIDNR/TzFlN/kj8TS8fH4BaLX3zNGC5sg
R4Poqi+eLpCzro/3yt2eJK439q1RW1ggX8bTBuJeTBGj0KAtg5sXSRPX0nle
kRlytyg3eHfgIrnra+zpGjFL7CL0Z16WL5LJL7Qvgb/mSPO/Vu8EFxeJ8Nhs
hFQOneT7/L64aSeDJDsdttPyWCSH9m8Mb73KIJ+l6KPllkvkp4W+8HA/g3hU
7g52v/uHmC9XmG02XCJrR6JtdC4zIcaIoeuTuURKQ+vtHvAz48su89pyjmXS
ov64//BjCtIq36+VCFkmvDFtovkprDjyPquAf3aZ3LDTp48ssSPyqN6J4kt/
iENU+bJPBReuacueCFBZIe5NHn8aj/GBJh4nbT2xQr6LvvHtiBNE/fNl/Tfe
TPimeSBzyEMEDmVTh6vHmXAhtMj54wtxHHtoV2Z/aw2Gv/3HUfteGr90JsMk
A5jBlFg3kfFBGhwbnGf3rzrwnaOAf4c0pJzP+l9bteYl8zm5bmm853gawhPI
DJZwA+e4fmkkbb9c92fVaxaW8g7+lgaTRtuW70HMSHMacd3AK4OPnXH3i0OY
0f7KriTYTAZXHg33OMUwoyl6K0vLSxm0b2oq/nWVGf/mhXbGusli6pNmO6WY
Gdnxcvk3I2nYE/C2wWqOGdwfg5veRtFwm0VAKGPV3VIWVEY0DXlG11z7Vx2u
maN48DwNYdcdhE/MM6PKr3mj5EUa1hxlqk2gM2N0YveXrBQazIuT9jYuMuPv
4z38rbk0/KA+Wme6wgw3dZHzD5po4FKUHbLjoOCGgsbXw1JyCFg/8qlGkoIn
hQdpji/lcLFUSWkAFNzbE8Kmq6+ANwYjZxpTKHAedDcaN1BAb+LpJsVrFNRY
Ntbf3aaAEspfqudXPf5y+yNBIwWMKAewkFQKAj6vmZ7YpYBok16t0jQKeH+I
Oz/drwCmC2ZRd29QoNL9YmeivwJ2n/PojbtNQeYDjRsiBQqAJGXtyXwK9ITo
Fp0y67Hl0KJ5bS0Fhh2On5wlFKFKlepPmKXgyzH6sS57ZYz+Pr7j81EWrGXw
sVgdVMalxNMfrNxZ4DvzSvaNozK4LvKealh1PHdR91NXZYh/m/5UeowFXr9L
zAu8laGd+8frqicL1seVudyOVAaZ1jqzx4cF04/iTQfvKePH8HW/twEs2MdR
Psu6qIxKq/4URgwLLPQEd73LUcFAy9Eo+WwWVHPelZOiboDadtmSpm8s+DdY
r004Xh01Eoc2PA5ixbCsv3bxZXXw6dAdTINZcWjI55RVkjpYo3TvfF41LaQv
LOW6OkIjSn1ZzrLi23kyIJ2rjgmFg2vtQ1mR6/n3BtdadQyuyXvGFMWKA++W
flxZVoeRdZ2l+0VWLIp6DGQEaaBNpYPt9E1W/Aje1sX51ybkRRQ4VtWxIoOm
4zplqYmt+vHmxlQ2nCkX/LDDRhNlJuvTJ1f9S8//e4adJkoz+v/cEWeDPf35
oPFBTSh2dSovS7DhRerNk3fcVu1aN1QhxYbdZ7e1BQZpIvJMucQWOTYsRV76
O/OmJorLSpJM1diQHpCh+XVUE1FcW/oajNlwdueVlu6kzdjlnPFxvz8bHLWV
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
zKe+m0rbqYmclJwl5zZ1I33jDoeE2nP4H94v/ig=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329149#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJw10nk41Iv3B/DJzJB932XMNETZpqyFz9sSKXtJyb6EK4mUKEuRlESWcLNE
WdsLUbktVERlj9tUqGwluZVd8/X743f+Oc/reZ/nnH8O3SfUyZ+LRCKJrCCR
/q//f8loWOxYoM8RQzwvzmZlcEyU6nKjyIw5wm7WNDUrQ5gA15tC/mWT7muk
ZWXQiO56kTH5Zbc8Zl/IytAi2AfsY4yWrcDOrcnKIIhnOU5XYpatY3NaOzvD
nrANlPrKWXak4TaFnAxPwm6D524Kc47IeujcWpgRSoiG/a4TUJkjPKuunWrI
iCNeRxcnya+dI+KSe48aZKYRz6JOp7DWzxH9L/2imNlFxMEX4sEwmyMYUT86
hKNuEYvqbhdy/eYIqmru8POEOsKF9FpONXGOaN28u3ql4WPC58axNdUlc4Ts
zNpHhmlNxM0MocWjjXOEzHXRNnJZM3FecWZF5+AccQT7j1UzXhGmlURXHNc8
MfU970Dnq3bCR8V86TBjnijO7dvV9q2TIN2RzyEwTwx3Ve4ZsughJI6fb872
midevQvT3HD8LWGybfPMYOw8cThqqlvmUT+hMe1Ce5I/T2T7D4rNGrMJnyZB
9v6GeaLxi8AGxuUPhKwwoQf2PKEvV0BzqhggJGx3O8j+mSdUnWZPFlOGiHwZ
g9APtAUis+rVX1bOn4jajgTxSWKBoNuxV3a2fybSFdreh/ouEGOc3s2aZsPE
mGtU4p6Ty/MiIYsfPo8QTy4ytKSvLhCf017YjWWNEfPfRvPNOxaIFuWv/TzG
XwmvRzVU6vQCUZ7hf+EpY4I4LnZuwxbaIhHW/kHgDnmSSIx7XG9rtUjoT737
Rj/2g0h0PSpEO7BI7Nx5x4ZROEW8CDHr3Vu4SJQ0ZQ2devwf4ZJWOFXTuki8
fzCfKCjxixhWe/o5jLNIhPw0DfSO/U0kGyRMm+suEXG6Sh8ivk8TJgJLXml/
LRGy3L9iFa7MEhYtrc83VSwR63XcnTcEzBOXTvQFcb4sEcev/B6/57BI1BhO
uMms+UO091lF+l/+Q+j9cdS4dvAP8cUofrtuCgnfVycpX33yh2DEPnOuFOZC
HvPWlgeKHCKg/daA510yJh+X8hjFcYhrlW8kqzKoeLeV6H05yiFaXunPji3y
gFXwa1JXlwQf2btL++r4cEhxwfBSNAlmwj5/WvYKIf3z7MrwThJCjZ6H9JwS
RWDpe8sKwxXomXD6eyRAAlUXrn0burEC3y9XeLx9LAPzm+5f6PZceJVZuvJp
hyJ0vrK7MiXI8DW69yOvSxEiD+u42pbtfMxBJLxHETYb5fQokmQo6JhOM/oV
IVZ/oCpi2Z1K2h6nBhThvCqmxVmKjJz0H2Wuk4pIeFU4KCNDRhKb7b1OkAZf
072xJfJk3Bazro60pmFrWHBqI4OMqb3rKK+baNBv61E2YZHBXRXRe9JXCWaO
eq2K9mQknpGryo+jo+uqytDgOTLevQ1ta42nY5vJs2Rm2nKuYCW9cJyO3qdh
ugHLntLMV3FNpOO33+ylb8u+G/BMXe40Hbr7eh/PpJPxdcDsQ3EGHQpqlUzh
TDKOb+kWbi+lQ0PLMcEsh4ygEf7EyjY6yltzOh8UkfE5XWXQU4GBga7Ig/O3
yGiPcKS7NTEw6n9+V203Ga+SQ7n1NzGRpfnL/iqdgkr6HrMJIyZm2kuUyQwK
lM/88+KyCRMyd0ype5adO693U9SMiVXvXIb4Vi/P887892MLEz/OyksEMymQ
pwh5NOxkwor0xEVjDQW3+mssz4UzocqzJ6RenYJLwcxciatMfLquafpDn4KX
Dt/se2nK2JU/s5ptR8GPH/b/esiqIPCdVmFrLAVlt0f39rmoYu5qqozyKAWl
Zhyyo6sq7r4oTMxedplBrdJLN1UQ7A8c6hgFsL7U3+Ctilzy/OqRZUsoldpe
DVZFqjiHUfWVAtuCMq/COFXIKXtw1k9ScDr9iNVwuSqMoqK3OkxTkB1d9ps6
r4r0PXHT9RQqQp5wrN5cUUOXVu8OBwYV/vFpDAXpdWi/1CvS6EWFUYpSp3iy
Jqq1O4xGvlGxR3O3zp0UTWzNvTkUMUHF2PftYY5pmqhyaCjk+k5F6aHnxzIu
aELjn9jdipNUcAJUhhRLNUF2Mft35xQVC3In1nk/1QT1mJxQ228qTBU/fUld
0oQF13zQiz9UeOTYDOUd1sJI+W1Hsig3yG7afbwbtWGSkuh1UY8bDTzK3v85
sKDffa7rdhI3DPNWdG3ezsIdwRip3ae4sVXa53OeMwsF3/8cJiVzo7Pt5rC5
KwsT3YPp9qe5cdrl7IEiXxY0tjHUJlO4YSGj2RlxmAUH+ZSfG85zY6Yn6uLf
+Szs33tLu/siN16zklmD4yx0s0/6ht3mhtLD6Nf9aetxw/ucqfaH5fslolU8
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

                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329177#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1: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
FatmVM1Kqo5IZEWcxP8BlMIrnQ==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329205#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1: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
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329233#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1: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
rhk0kw0Jc/RPg/H4H6g+emM=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329261#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1: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
yLTu1x78c5uZ55THjw6rhXxzqgUkx1zXHyvkxxPVW+kf6BYYWpmr9rvNj2Xe
zymbtSxgtlPGIvYBP1b791vG+lmgR2GG40MVPyY3/RmWGbOA7rYEnZFOfhyr
NdI9NWqJB5WDBQcIGraIn21zZ1qjb52cyKAeDQHqk1KDqdZosvtc+MiAhtuD
7ZaeOdZQolKLo0FDjKzJrZQya3wK5F/RMKGhv/qGQUifNc6xb96YsZuGi5Ht
cb4qNvDMKDasOEhDm7hIeGyHDeYiv6rKnKOBN7aUwW9rhygvixsbntGgnXA2
dNHZDvF/8jw9qln5nqgN8152YOhsMiqqoaGxLnhO5pIdcp0i5DUaaeCIUDpk
+dQOHqXKi4dbaHi6Y2RWRmkvrmrYdst8YvlFX9VzQXvUPPq0+wDXWpzXltp5
WH0/7CTvWUS6rIV4cVyazZIjwnt0yAQtASzf+eF6QtQJJgERFae2CaDKpL+l
SssJusUrHg76AuAQUfKh+zvBuKLssrapANwLvjQXjTnBzEzZcLO9AE6ne/77
Y9QZ/zB1BzTOCrD+I/X5OUwXpMoq5LdVCuDop8C+vBwXCH2LFD/zQgAnOrZ/
ay9zwSZRWoZUgwDaW3UWnvS5QDclWDL6nQD0lV+oFKu4wtPEV/T+kABCzDNH
6ztcoUbT6A7gEsQP4wB5E1s35BRe0nRzEUTs45R+JW83WLuqfV57TBBHqwfc
7S+54X7ndM4rL0GM5WqSF566oTtoVc3BQEGccDCotFNyZ91zg8BivCAW1ryy
mRY8ivStBow91YKgrVX3v6rugYn1QmKuKkJQXiW6fWCvB1xV/frTNIQQM3Jp
qeScB5hf474ObhdCrpni46pGD/R1C+RnmQtBPis4fdbDEy/uJpn2s96lGMnF
Vv7a4yjsyTVKKxBCkWHh+Oklb1BdqiSEtYURStv5YUDLB7M9XFLVpDC+jvRv
2e7vA435obiL5sLY90uH482YD4QvFiUfchJG/pWpTvqYL+6XJ89bXRKGYle5
+EOmHwYnurVefxBm9Xeb7nCZH7x1Yvj2jApDMvOMQlOfH1p+mPpOfReG+QMz
wX9V/EHrvpCXxSMCBqPcqL3DH/MZYj41+iJgv5nramMbgPm3T67WFYignngU
duRSAM7JvspuLRPBytVCbebTALTcV+jjrxNBSsZ3bxel0+iR3cFkDIrgwCzb
md+CZ3Co8oHse0k6CHG7oOvqgcjk98pOyKEjy3jHwJNzgVBM2Dl9qJSOtAMX
ApsaA7E/U2/Ir4GOKCWqyLLHX2j3KI6I/EaHUePwM7HaIEzoXRdibhPFnILc
s/NLIRCVPx7wbEQUHNQvA0b+56FvLt3214ooDna+vNY+dh7xasF19+hisF+8
Ji4zFgprpR62fHMx/MmOmy9jhuN6TISIaakYDn28PPm6Lxxnmm17A1rEILcu
7VWlSgTmro2v7J4Qg0l6aGdXRwQcOY/HCCuJQzrL6O5e20jUL8q1fC8SR4rV
X/6JTyNRYR0Juzfi8Ls/m+ymdBGfGp/vzZ0Sh8ZZu3MrglHwmFryNt+2DnKT
ClvT1KMhomOgqPvfOpQ+PiH/ujEaO1yyPt4jJNA0v+r+ikcMWkp+zyZtkcC3
pnFNidrLqJBI1uVOkMAF2/FvYUuxcCr4VJbrJontTl53Osfi0FWqbRP3jyQ2
rFmWlxuLx49VlMzBHkm0q/0cecy8hmfrsibiDkohK/3toyqVBPzSvGS6L1MK
p4dPP+7uSEBRntc7rxEpZDskBNvb/o3FcKntZRekQdvY7uCulITNHuzemZ3S
eBn+UJNNKBmMsMd1uXQZOE+qfUxTT4Hx4l3bgL9kkJOobMHmmYoy/08zzBIZ
RHlSmyRq07DqX9qU7RcZtKVonwhfuomJzZTwl+6yqK06nCI3loFZ0/Vdz27L
4ueXxXXlzCz082wdnFiQRf6B4OHujmzwBPuGuFnIYXSNRq69bS7Omx0/GFAs
h42Mw/ZsQnl4FNMc0LZWHuPNYj/T1Augd/0y3/MoefQNEt0StUWwWt6pRlIZ
yEj+62T40h1YHnfxuJTFQJ/Ca3o58z6+vZaNuGWjgAKb8mR720fgGI+XqVdY
D4lbeb1p6uVQI9L+LlbegHM8inrhS5Uo9uFXUj2vCD/mNTd721p8jXrLFWix
ESVUgYawpTfIPv+Kc4auigZHSmfoUh8WszYGzZlvxhXZyGHDyXVGzxwic30l
I/A/qgc/Hg==
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329289#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1:eJw11Xkw1d//B3AlnzfXdrm41nBTkSJr9vczlBb7Un1k32WJrJVcWiwR2ZJP
uywJJRKKFC2yFWWpZGkhS2Utkfzu94/fmXnNmce8znPOzDkz58i6HbT2XMnG
xjbEqv/N/z+Kow14O7gI2DQ+S85MXzbQlw679z/XV2w9k5nOT/IlFDt3shwc
tik1M12a1OQSLX/Nsk5U37nMdGWyLGNyTzfLZ7LPV2amk2SY3JWr71nOJxI3
Z6VbkA8Ep9WGWf46u0syO92ZzDTws19keVWkXcvl9IPkkdc3C9ZSCLz0LImv
S2eSMtNOekdYnjDqPqqVkUrSHv9yWMNNQDvO47Bc1hXygPDFhDAeAkZ2kx38
h8tI56wbhA0/gfDp7OFnJ6pJFxXFQysECagw/r3Lqf2IPKlCVcwXIlD+YkO9
duoTUlK05kUcnZUPF2hlL2giz/OlzOuJE+BeDoi6y2gjo0aNd2hIEWhrygnq
bHtFFtRSshVkCCgF9O5rnegkaXmVSXMMAq65Rfs/GneRKasdSe51BHbkBSup
xfaQye8ShhbkWfvpTr0RrX9LKi9OiI8rEjgrMyQ4r99HUn0ePFJSJhCZw6PG
uN5Pmk1JUy1UCbz6cVHa+sYgGb76YFeLBgHNNfOnrq36SE5MPf9mq806r4i2
AyZ2n0hLB/rtOj0CdOE+zs5Xn0kjxQ7jDBDQe9y9TclwmNQXo8iYGhNY3+L/
p//zCJn55INX7A4CQkbPzUczR0nzPQNDXaYETDrG3hL64yTajs4IWhFoUvc8
18D4RsZZ6I6N2hG459PPU87+g7xWVdVQZk/gS9X7CdmoSbLt2fuQfGdWXqTc
lHF5ilT9Er3TyZPA/mOZH+MfTZNO3H2XaH4EkvwWTvIKzZJv2030a4IJ3D+/
1cc1eo7kdEr450UkgcMvpftDv/8kyeqG3xNMAqlpM9GSefNkjcO7Q84JBGJu
O9ipeS+Qbt5ik0QagX6eubEqyz/kSZkAOP9HQFneJMLz+l+Sb2T6Z14+Aa1u
po1GEhtubeAVCb5DYI79qV0R/0osRDjf+VFPYAVZNuhcwY5NPT9yD70kwL7Y
LnwznQP5U5pvfg8SEJjTnB/9w7p3FUa42S8Cm7jLl/yrKSjWUpNUoXKC7bbL
3xdefLjRfuKQtAonFCyfBnTFC+De4MU3/f9yIu+m1X8j3kKgOnS1tZ5muaHA
qeeRKMzMDm5d38kJ6au5nA0dq9EV09s6u5kLtrP+/2zRlcOxo4yo9jouVCbv
M/ymJwdmkvHZvyy3zz54ft1ADvyFm4qVHnJhr4f6bQFDOfiM2M+lsJwWPDs9
uUMO36d2vbeo50KYD7dT3R45KJa0fe98xIUKzYrtKYfkYErtMehv5ML5Gtnz
QsVyoMtL9HI1c8GYOWrRLb0We4fLb1d1c6Hkrek7J7F1kDOovXNqigtZ3z57
9e6Vx+vukNrnmyjoOLbIbmUvj8lr0+xcShTwh5TLNDvIY+sHiz27WF5z/OLb
Old5mPeXSbSx3Gh3zazYTx77OvcrvFamoLQ11+UyUx7+He3WQyoUSFaEmgwX
ysPZT26aQ5OC/OO5cxwL8nA5FMoRbECBR9qiycs8BVjH/mp7bUFh5U4zJOmK
EHDda7kQSsGFNPFOWoISJB6a/U1opiBQzUa9PEkJrY/Hfw2yHDZtFmyVqoSB
iR0rtVsoQPijqPRzSnBLsd05yvKom8zH1flK0N+id21XGwXClChF1wbW+vqS
KOorCoLm+r6cWVLCXFAAR1EXBZv0t3/MCVeGCfGUyTdEAc/Cxl4unc1I914s
uTtPQZKirOu0pQpCbMQiGxS54RXOc5NgU8eBK5+5N+Zx45fxkqcsuzqSkgmi
guVUgbN0vX/UwSf0iaGTz42KIg/HUB51PLSdq91RwA3VuH0xk6LqeHF46Kj3
DW6YPGlJoKuqw578qVxcwo0DcZ8/rPFUx2l26bbdldwQ7FVxs2xXR0912qPZ
Z9zYzJk3O1CqAdP8XZp/x7mhK/HvUYubW6A0hXMd+jzgCN08ynr58H7qa9Ys
Fy9cDTn2vFrWQ1uZZtNfCi9yTdk9hQl9RK0Tcebi4YVOrH/oTWF9JDRHPZDm
40Xxq/UFbGr6yOrM1LAS5MUBCZEm50B9ZHcMeTwX50X5W1H1pRF9OD7L9l25
kReeTBFNlxEDtJaOVzy24EXlpaijASmAsSP3tpGLvHDOSZHTtTLC7yCK1xdr
PpxrdAy6tdcIvAkpo8ds+cD8dZN7nZMRjBf8NOh7+GCUJmTI8DPCXbVSedN/
+eDFUy9vccoIyxwNKfXOfKBkdz2Nvm8EV/LJSKs/H2QfujfZyRtjQ2NBSFw8
HwrN53yWBLchzy0r+mI9H06EO12+pWSCaabY2ce6/ODLnN72ZMEUJZG+j5q1
qZihchbu5DKDd97HeG1dKoSWKy58oJuBedfLtkiPisrl2WwVDTPWv+iwIpmk
QjXvh3lykBmsfi61Om6jwmuc74vMmBlsOlS2qltREZhrq3to1Byq9qteVvpS
scopptMj1RK3+ff+dLhMBYU5v3rovCVuXT07TL9Khav+gLlPriXqpnN131yj
QjnLPC+70hKGh9olrPKpcPfMN4jqs8SQn+Po/hIqglMGzgRutAKbf4d/1X0q
zFYxYpK7rPBd8ktyZi8VhxMb5PitbRB/k/rCV0wA96+djP7tZIMOkVqTVAkB
BP/JWD/nZwOzwLin96QE8Jf39IxMnA18xXqbuRkC6BHV2m/+wAb+rVS79g0C
mDjxc1pGwRZpnRy7q/UEMH7gW109zQ7PaUxouQngsJvqDmflvThHM3FqvisA
NZ3SHKtFB7hkbtEdiBVEVpSI2wFRR/Af/LDv8ilBHLBbflWn4Yhb0y3pbomC
OFG0M4Ae7IiDdT2nF84Kgn8XZ3vRmCM4iwQ++V5l5eOTa36OOuGGrWSE1SNB
hBHvCnJTXZCcGfOxcBUN4xXJffm5LmB3svklx0UDb7fF+JtKF1zfk89WxEuD
pLr5fHWfC3KNI3SeidBQbd+z8eZGV4iLmrvtVaBBQqtq9GmXK+I8tqgPW9Dg
7ZC6xtjaHXZk6hq76zTEiN8dUPB3xyv+udp3N2hoDV7ysItzx37m060HbtEQ
OG1FHn/gjoWxT4mFNTQUTznU2ih4YEL7xdnLr2hYHz5uNUnzROqP0v0X2YQQ
dWZvcJKyN/CztmXUVwiBK7bqDNp6g2Ntes1skBCEAsoWS494Q1tl30O+SCG4
9lvfq3vujePMpImgOCH4HrtxYdrbB19X6JrNXhfC9tWKnfyNvlC99Pqr0kch
MFNHJkIX/XHFZHbgZIAwTjslfBjUCMDJVN9Li+HCWNKXVdMJDsDpebUzSTHC
sAqK+qd1LADpWVPv5jOEIZexpYc+FginmdhmkVphNKgMiZenBiHwbmRCr4AI
Hl37o/u5Mgh/hOYnZaREoBR9dW1TXxBKS9rOJcmz+oqhtJqNwYj3YoQ3kyJ4
JTVi+KYrGG+2jH5iDxKB8/h7VyvrENwtWJ2/tlcEd+InmG5xIRBLdFs990UE
HTs+aaY+CMEn+0vOczMiqPiuEuCiEIqCv53sZ6h0JP4yCvtDC8Ow90yHnikd
x7XyDp9TjoB5Z2LRaDsd/wTnDFYfiYDsrpf3Dw7SUVbaE9H0PAIre3pmyGk6
2njdRZa8I2FU8bj4uYgoaNM76sUaD2OmyBNV7qLw+XH14bHFKLQl1/tk8IuB
d8hnyDD4GBQaQrLY1otBYsYy7c3YMRCZWjdHDcQQaCArITMWjSZduqhhkBi6
ggbnKlNj4Ll0ov7iWzHsqhn43tIXg4LlkojIOTHkKU43126MReKeFbV/BMTh
Xtjf3dMVi893Un5LmInj2/6KW7bWJ7BUot50oVUc0UPfgtMfnAC9uX/0yndx
7AsKOOeucBLyOrL5mQIS2HL97ZFl2ikw3zW1x9hL4Lpp05Yc5Xh8aP5QMvlb
AmkJwnItz+MRub3r8Yq1koj5VFm27J2A2/JCnbFWksjSr9SQbEzEG63xRoXb
kqjiGZtgLiajUNo7WzBGCpdrDpd2j51B4tqjn5JqpCB4X2otYywFOivd5gLm
pLB5+OLXe6lnwbv7dYly2GpQXsbcrduYBv+cNH9mzWokUDWqervSwAhwXyG+
QhpxXw9F2VlnoN3Zp8/zgjSyXryw91DIxO0yt7Vt36WR9POhBptQFtI5npRG
rJFB4pOQgRzlbATlHfWsPSGDvJgMczaf81gXNjB8tloGO4/+90KyMQdxWVZN
XFMySFNT9Y9ZvIiv1YXBXwJlEaVzLYcxdhkVES5ZiZWyaPHaJlWVehXqp1Uz
PFYykNy7+KW36xpsRG3ZTuxhoNT4Z56d9XUcbTZS1KpgwE8xci+bUD74vYxy
tMTX4FLJ9d85yoXgpgUSDWfWIGOb/HvJxiLQe8iGt1Q5vJQIColZLEGWyqlj
5YVyGN/nJl6VWobjYQsd9vvWgiFmkGNnXYELbNWP/yiug/azmsEc5Sq4Dzzc
vk9lPbTN6MYxi7UoWpMmbnhcHlk/Lh2ws24EF6Xcod9qA4plJ7uYi62gNmhL
nZbYhKenn8xFL/Zht+yAr/ZuFRwRDN22eUTKsM//avdLn1j8HwsmLCU=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329317#1"]& ]}}, {}}, {{{{}, {}, 
                   TagBox[{
                    Directive[
                    Opacity[1.], 
                    AbsoluteThickness[1], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    LineBox[CompressedData["
1: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
14/JWtCwy++S8BH8Dznon1I=
                    "]]}, 
                    Annotation[#, 
                    "Charting`Private`Tag$13329345#1"]& ]}}, {}}}, {
               GridLines -> Dynamic[
                  Map[{{#, 
                    GrayLevel[0.7]}}& , 
                   MousePosition[{"Graphics", Graphics}, None]]], 
                Method -> {"GridLinesInFront" -> True}, PlotLabel -> None, 
                ImageSize -> 240, 
                PlotRange -> {{0., 
                 185.48577211085927`}, {-0.14758841924895427`, 
                 5.583840879424497}}, 
                PlotRange -> {{0., 185.48577211085927`}, {-316.1592653589793, 
                 316.1592653589793}}, AxesLabel -> {
                  FormBox["x", TraditionalForm], 
                  FormBox["y", TraditionalForm]}, PlotLabel -> FormBox[
                  RowBox[{"{", 
                    RowBox[{"y", "(", "0", ")"}], "}"}], TraditionalForm], 
                AxesOrigin -> {0, Automatic}, DisplayFunction -> Identity, 
                PlotRangePadding -> {{
                   Scaled[0.05], 
                   Scaled[0.05]}, {
                   Scaled[0.05], 
                   Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> 
                All, DisplayFunction -> Identity, AspectRatio -> 
                NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, AxesStyle -> Directive[
                  AbsoluteThickness[0.2]], BaseStyle -> Automatic, 
                DisplayFunction :> Identity, 
                FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
                Directive[
                  AbsoluteThickness[0.2]], 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLinesStyle -> Automatic, 
                Method -> {
                 "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "ScalingFunctions" -> None}, PlotRange -> {All, All}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {Automatic, Automatic}, 
                Ticks -> {Automatic, Automatic}, TicksStyle -> {}}, 
               TicksStyle -> Directive[
                 GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], 
                 FontOpacity -> 1]], "\"  \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TemplateBox[{"\"sampling \"", 
                   RowBox[{"y", "(", "0", ")"}]}, "RowDefault"], "\[NoBreak]",
                  "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}]}, "RowDefault"], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Interactive differential equation solution plots", 
     "scanner" -> "ODE", "id" -> 
     "InteractiveDifferentialEquationSolutionPlots", "position" -> "700", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> True, "string" -> False}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             FormBox[
              StyleBox[
               
               DynamicModuleBox[{
                CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = True, 
                 CalculateScan`ODEScan`Private`iSQ$$ = True, 
                 CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                 False, $CellContext`Y1$$ = 0.7853981633974483, 
                 CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                 CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                 0.2575795557527179, Typeset`show$$ = True, 
                 Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu",
                  Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
                 "\"untitled\"", Typeset`specs$$ = {{
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], {
                    False, True}}, {{
                    Hold[$CellContext`Y1$$], 0.7853981633974483, 
                    $CellContext`y[0]}, -1.5550883635269477`, 
                    1.5550883635269477`}, {{
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$], 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}}, {{
                    Hold[CalculateScan`ODEScan`Private`yTS$$], {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`y], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 1 + 1]]]}, {{
                    Hold[CalculateScan`ODEScan`Private`yyTS$$], {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2836032[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
2836032["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`y], 
                    Derivative[
                    Part[#, 2]][$CellContext`y]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}}]]}, {{
                    Hold[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$], 
                    0.2575795557527179, 
                    Subscript["x", "max"]}, -1, 1}, {{
                    Hold[CalculateScan`ODEScan`Private`iSQ$$], True, ""}, {
                    True, False}}, {
                    Hold[
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[2], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[3], 
                    Manipulate`Place[4]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2836032["`1`\[Hyphen]range", {
                    Style["x", Italic]}], 
                    Manipulate`Place[5], 
                    Row[{
                    Manipulate`Place[6], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " ", "More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]], 
                    Manipulate`Dump`ThisIsNotAControl}}, Typeset`size$$ = 
                 Automatic, Typeset`update$$ = 0, Typeset`initDone$$ = False, 
                 Typeset`skipInitDone$$ = False, 
                 CalculateUtilities`GraphicsUtilities`Private`more$2837241$$ = 
                 False, $CellContext`Y1$2837246$$ = 0, 
                 CalculateScan`ODEScan`Private`functionOrPhasePlotQ$2837247$$ = 
                 False, CalculateScan`ODEScan`Private`\[CapitalDelta]x$\
2837248$$ = 0, CalculateScan`ODEScan`Private`iSQ$2837249$$ = False}, 
                DynamicBox[
                 Manipulate`ManipulateBoxes[
                 2, TraditionalForm, 
                  "Variables" :> {
                   CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ = 
                    True, CalculateScan`ODEScan`Private`iSQ$$ = True, 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, $CellContext`Y1$$ = 0.7853981633974483, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$ = 
                    0.2575795557527179}, "ControllerVariables" :> {
                    Hold[
                    CalculateUtilities`GraphicsUtilities`Private`more$$, 
                    CalculateUtilities`GraphicsUtilities`Private`more$2837241$\
$, False], 
                    Hold[$CellContext`Y1$$, $CellContext`Y1$2837246$$, 0], 
                    Hold[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$\
2837247$$, False], 
                    Hold[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$2837248$$, 
                    0], 
                    Hold[
                    CalculateScan`ODEScan`Private`iSQ$$, 
                    CalculateScan`ODEScan`Private`iSQ$2837249$$, False]}, 
                  "OtherVariables" :> {
                   Typeset`show$$, Typeset`bookmarkList$$, 
                    Typeset`bookmarkMode$$, Typeset`animator$$, 
                    Typeset`animvar$$, Typeset`name$$, Typeset`specs$$, 
                    Typeset`size$$, Typeset`update$$, Typeset`initDone$$, 
                    Typeset`skipInitDone$$}, "Body" :> 
                  Module[{
                    CalculateScan`ODEScan`Private`eqs$, 
                    CalculateScan`ODEScan`Private`sol$, 
                    CalculateScan`ODEScan`Private`addInits$, 
                    CalculateScan`ODEScan`Private`nds$, 
                    CalculateScan`ODEScan`Private`xRanges$, 
                    CalculateScan`ODEScan`Private`xRange$, 
                    CalculateScan`ODEScan`Private`IsPurelyRealQ$, 
                    CalculateScan`ODEScan`Private`yPlotRe$, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$, 
                    CalculateScan`ODEScan`Private`yPlotReIm$, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$,
                     CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$, CalculateScan`ODEScan`Private`yyPPlotRe$}, 
                    CalculateScan`ODEScan`Private`eqs$ = 
                    Flatten[{{
                    Derivative[
                    1][$CellContext`y][$CellContext`x] == \
$CellContext`y[$CellContext`x]/($CellContext`x + \
$CellContext`y[$CellContext`x]^4)}, {}, 
                    CalculateScan`ODEScan`Private`addInits$ = Thread[{
                    $CellContext`y[0]} == Tan[{$CellContext`Y1$$}]]}]; 
                    CalculateScan`ODEScan`Private`sol$ = Quiet[
                    Check[CalculateScan`ODEScan`Private`nds$ = Quiet[
                    NDSolve[
                    CalculateScan`ODEScan`Private`eqs$, $CellContext`y, \
{$CellContext`x, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}, PrecisionGoal -> ControlActive[4, Automatic], 
                    AccuracyGoal -> ControlActive[4, Automatic], MaxSteps -> 
                    ControlActive[10^4, 5 10^4]], {
                    MessageName[NDSolve, "mxst"], 
                    MessageName[NDSolve, "ndsz"]}], 
                    CalculateScan`ODEScan`Private`failedNDSolve = 
                    Hold[NDSolve][
                    CalculateScan`ODEScan`Private`eqs$, $CellContext`y, \
{$CellContext`x, 0, 0 + Sign[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]
                     Tan[0.999 Pi 2^(-1) 
                    Abs[CalculateScan`ODEScan`Private`\[CapitalDelta]x$$]^(1/
                    8)]}]; "$Failed"]]; If[
                    Or[
                    MatchQ[CalculateScan`ODEScan`Private`sol$, 
                    Blank[NDSolve]], CalculateScan`ODEScan`Private`sol$ === 
                    "$Failed", Chop[
                    Apply[Subtract, 
                    Part[CalculateScan`ODEScan`Private`nds$, 1, 1, 2, 1, 1]]] == 
                    0], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
2836032["could not numerically solve the differential equation for the \
specified parameters", 14242], 
                    CalculateScan`ODEScan`Private`xRanges$ = 
                    Map[Part[#, 1, 2, 1, 1]& , 
                    CalculateScan`ODEScan`Private`nds$]; 
                    CalculateScan`ODEScan`Private`xRange$ = {
                    0, 0 + Sign[
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$] Min[
                    Abs[
                    Apply[
                    Subtract, CalculateScan`ODEScan`Private`xRanges$, {1}]]]}; 
                    CalculateScan`ODEScan`Private`IsPurelyRealQ$ = Not[
                    MemberQ[
                    Cases[CalculateScan`ODEScan`Private`nds$, 
                    Blank[List], {0, Infinity}], 
                    Blank[Complex], {0, Infinity}]]; 
                    If[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    If[CalculateScan`ODEScan`Private`yTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yTS$$ = {1}]; 
                    If[CalculateScan`ODEScan`Private`IsPurelyRealQ$, 
                    CalculateScan`ODEScan`Private`yPlotRe$ = Plot[
                    Evaluate[
                    ReplaceAll[
                    Map[Derivative[# - 1][$CellContext`y][$CellContext`x]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    CalculateScan`ODEScan`Private`nds$]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`x, 
                    CalculateScan`ODEScan`Private`xRange$}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits$], 
                    PlotStyle -> Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`y, 
                    Superscript[$CellContext`y, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$ = 
                    Part[
                    Lookup[
                    AbsoluteOptions[
                    CalculateScan`ODEScan`Private`yPlotRe$, PlotRange], 
                    PlotRange], 2]; If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
, 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$]],
                     Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$]]/
                    Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe]\
] > 1/3], Null, CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$ + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotRe$]]]\
; Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotRe$, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`oldVerticalPlotRangeyPlotRe}\
], CalculateScan`ODEScan`Private`yPlotRe$], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[Derivative[# - 1][$CellContext`y][
                    RawBoxes[
                    FormBox["x", TraditionalForm]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], Right], 
                    CalculateScan`ODEScan`Private`yPlotReIm$ = Plot[
                    Evaluate[
                    ReplaceAll[
                    Join[
                    Map[Re[
                    Derivative[# - 1][$CellContext`y][$CellContext`x]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    Map[Im[
                    Derivative[# - 1][$CellContext`y][$CellContext`x]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    CalculateScan`ODEScan`Private`nds$]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`x, 
                    CalculateScan`ODEScan`Private`xRange$}]], PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits$], 
                    PlotRange -> Automatic, PlotStyle -> Join[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    (ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], AxesLabel -> {
                    RawBoxes[
                    FormBox["x", TraditionalForm]], 
                    If[
                    Union[CalculateScan`ODEScan`Private`yTS$$] === {
                    1}, $CellContext`y, 
                    Superscript[$CellContext`y, "(n)"]]}, PlotRange -> 
                    Automatic, ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$ = 
                    Part[
                    Lookup[
                    AbsoluteOptions[
                    CalculateScan`ODEScan`Private`yPlotReIm$, PlotRange], 
                    PlotRange], 2]; If[
                    And[
                    IntervalMemberQ[
                    Interval[
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$], 
                    Interval[
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$]\
], Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$]\
]/Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$]] > 1/3], Null, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$ = 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$ + \
{(-1)/3, 1/3} Abs[
                    Apply[
                    Subtract, 
                    CalculateScan`ODEScan`Private`verticalPlotRangeyPlotReIm$]\
]]; Labeled[
                    If[CalculateScan`ODEScan`Private`iSQ$$, 
                    Show[
                    CalculateScan`ODEScan`Private`yPlotReIm$, 
                    PlotRange -> {
                    Automatic, 
                    CalculateScan`ODEScan`Private`\
oldVerticalPlotRangeyPlotReIm$}], CalculateScan`ODEScan`Private`yPlotReIm$], 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    Join[
                    MapIndexed[Re[
                    Derivative[# - 1][$CellContext`y][
                    RawBoxes[
                    FormBox["x", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    MapIndexed[Im[
                    Derivative[# - 1][$CellContext`y][
                    RawBoxes[
                    FormBox["x", TraditionalForm]]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]], 
                    Join[
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]], 
                    
                    MapIndexed[(
                    ReplaceAll[#, Pattern[CalculateScan`ODEScan`Private`col, 
                    Blank[RGBColor]] :> 
                    Apply[RGBColor, 1 - Apply[
                    List, CalculateScan`ODEScan`Private`col]]]& )[
                    Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]]& , 
                    Union[CalculateScan`ODEScan`Private`yTS$$]]]], Right]], 
                    If[CalculateScan`ODEScan`Private`yyTS$$ === {}, 
                    CalculateScan`ODEScan`Private`yyTS$$ = {1}]; 
                    CalculateScan`ODEScan`Private`yyPPlotRe$ = ParametricPlot[
                    Evaluate[
                    Map[ReplaceAll[#, CalculateScan`ODEScan`Private`nds$]& , 
                    Re[
                    Apply[{
                    Derivative[#][$CellContext`y][$CellContext`x], 
                    Derivative[#2][$CellContext`y][$CellContext`x]}& , 
                    Part[{{0, 1}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], {1}]]]], 
                    Evaluate[
                    
                    Flatten[{$CellContext`x, 
                    CalculateScan`ODEScan`Private`xRange$}]], AxesLabel -> {
                    Superscript[$CellContext`y, 
                    Row[{"(", 
                    Style["m", Italic], ")"}]], 
                    Superscript[$CellContext`y, 
                    Row[{"(", 
                    Style["n", Italic], ")"}]]}, PlotLabel -> 
                    Column[CalculateScan`ODEScan`Private`addInits$], 
                    PlotStyle -> Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]], AspectRatio -> 
                    1/GoldenRatio, PlotRange -> Automatic, 
                    ImagePadding -> {{10, 30}, {10, 20}}, 
                    ImageSize -> {300, Automatic}]; 
                    Labeled[CalculateScan`ODEScan`Private`yyPPlotRe$, 
                    
                    Function[{
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`styles}, 
                    Style[
                    Grid[
                    Table[{
                    Graphics[{
                    Part[
                    CalculateScan`ODEScan`Private`styles, 
                    CalculateScan`ODEScan`Private`j], 
                    Line[{{0, 0}, {1, 0}}]}, ImageSize -> {25, 15}, 
                    PlotRange -> {{0, 1}, {(-1)/2, 1/2}}, AspectRatio -> 1/2], 
                    Part[
                    CalculateScan`ODEScan`Private`labels, 
                    CalculateScan`ODEScan`Private`j]}, {
                    CalculateScan`ODEScan`Private`j, 
                    Length[CalculateScan`ODEScan`Private`labels]}], Frame -> 
                    False, Spacings -> {1, 1}], 
                    ImageSizeMultipliers -> {1, 1}]][
                    MapIndexed[
                    Map[If[CalculateScan`ODEScan`Private`IsPurelyRealQ$, 
                    Identity[
                    Blank[Slot]], 
                    Re[
                    Blank[Slot]]]& , {
                    Derivative[
                    Part[#, 1]][$CellContext`y], 
                    Derivative[
                    Part[#, 2]][$CellContext`y]}]& , 
                    Part[{{0, 1}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]], 
                    MapIndexed[Part[{
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24720000000000014`, 0.24, 0.6]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.24, 0.4428931686004542]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.6, 0.5470136627990908, 0.24]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.6, 0.33692049419863584`]], 
                    Directive[
                    AbsoluteThickness[1], 
                    RGBColor[0.24, 0.5939180232054561, 0.6]]}, 
                    Part[#2, 1]]& , 
                    Part[{{0, 1}}, 
                    Union[CalculateScan`ODEScan`Private`yyTS$$]]]], Right]]]],
                   "Specifications" :> {{
                    CalculateUtilities`GraphicsUtilities`Private`more$$, {
                    False, True}, ControlType -> 
                    None}, {{$CellContext`Y1$$, 0.7853981633974483, 
                    $CellContext`y[0]}, -1.5550883635269477`, 
                    1.5550883635269477`, ControlPlacement -> 1}, {{
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    True, "show"}, {
                    True -> "solution or derivatives", False -> 
                    "generalized phase plots"}, ControlPlacement -> 2}, {{
                    CalculateScan`ODEScan`Private`yTS$$, {1}, ""}, 
                    Dynamic[
                    Map[# -> Dynamic[
                    Style[
                    Derivative[# - 1][$CellContext`y], 
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$, 
                    Black, Gray]]]& , 
                    Range[1, 1 + 1]]], ControlType -> CheckboxBar, 
                    ContinuousAction -> False, ControlPlacement -> 3}, {{
                    CalculateScan`ODEScan`Private`yyTS$$, {1}, ""}, 
                    Dynamic[
                    MapIndexed[Part[#2, 1] -> Dynamic[
                    Style[
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2836032[
                    
                    CalculateUtilities`GraphicsUtilities`Private`localize$\
2836032["`1` vs. `2`", 14246], {
                    Derivative[
                    Part[#, 1]][$CellContext`y], 
                    Derivative[
                    Part[#, 2]][$CellContext`y]}], 
                    If[
                    Not[CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$],
                     Black, Gray]]]& , {{0, 1}}]], ControlType -> CheckboxBar,
                     ContinuousAction -> False, ControlPlacement -> 4}, {{
                    CalculateScan`ODEScan`Private`\[CapitalDelta]x$$, 
                    0.2575795557527179, 
                    Subscript["x", "max"]}, -1, 1, ControlPlacement -> 5}, {{
                    CalculateScan`ODEScan`Private`iSQ$$, True, ""}, {
                    True, False}, ControlPlacement -> 6}, 
                    Style[
                    Overlay[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource[
                    "WABitmaps", "PodInfoBackground"]]], 
                    Pane[
                    Column[{
                    Row[{
                    Invisible[
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]]], 
                    " ", 
                    Column[{
                    Style["Initial conditions:"], 
                    Manipulate`Place[1]}]}], 
                    PaneSelector[{True -> Grid[{{
                    Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " "}], CalculateUtilities`GraphicsUtilities`Private`more$$\
 = False, Appearance -> None, BaseStyle -> {}], 
                    Button[
                    "Fewer controls", 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    False, Appearance -> None, BaseStyle -> {}]}, {"", 
                    Item[
                    Column[{
                    Manipulate`Place[2], 
                    Dynamic[
                    If[
                    CalculateScan`ODEScan`Private`functionOrPhasePlotQ$$ === 
                    True, 
                    Manipulate`Place[3], 
                    Manipulate`Place[4]]], 
                    
                    CalculateUtilities`GraphicsUtilities`Private`rowTemplate$\
2836032["`1`\[Hyphen]range", {
                    Style["x", Italic]}], 
                    Manipulate`Place[5], 
                    Row[{
                    Manipulate`Place[6], " vertical image stabilization"}]}, 
                    Dividers -> {None, {
                    False, False, True, False, True, False, False}}], 
                    ItemSize -> Scaled[1], 
                    Frame -> {None, None, True, None}]}}, FrameStyle -> 
                    GrayLevel[0.9], Alignment -> Left, Spacings -> {0, 0.8}], 
                    False -> Button[
                    Row[{
                    Dynamic[
                    RawBoxes[
                    FEPrivate`FrontEndResource["WABitmaps", "OrangePlus"]]], 
                    " ", "More controls"}], 
                    CalculateUtilities`GraphicsUtilities`Private`more$$ = 
                    True, Appearance -> None, BaseStyle -> {}]}, 
                    Dynamic[
                    CalculateUtilities`GraphicsUtilities`Private`more$$], 
                    ImageSize -> Automatic]}], 
                    ImageMargins -> {{20, 30}, {10, 10}}]}, {1, 2}, 2, 
                    Alignment -> {Left, Top}]]}, 
                  "Options" :> {
                   ControlPlacement -> Bottom, 
                    FrameMargins -> {{0, 0}, {0, 10}}, Paneled -> False, 
                    AppearanceElements -> {}, 
                    LabelStyle -> {
                    "DialogStyle", FontColor -> GrayLevel[0.25]}}, 
                  "DefaultOptions" :> {}], SingleEvaluation -> True], 
                Initialization :> ({None, 
                   ReleaseHold[
                    Uncompress[
                    "6:eJztVtuO0zAQbSn3O/wBEs8IWoR4QQK6y7LSAiUp7/\
Umk8TCtYPt7IWfB4/dJM22WymmC2iVPozqSXM8c+\
bMdJ4ciiDp93o9ddWYj4LFyQ08PTZmLOa5KHi8e5JLUIoKnlzBZ7eNCUHvACOnEDvfdWM+\
CDkn2p3f4PuERQUjGr5pyqimoGZ7kuQZjVTtmUh6ZH4yYyIijP6Ep8PXo1fPR0MHg7FMiNYguRq1hc\
wzSRQkPQS6Zsx7Rvh3d3xUHj8XjIXwowAegXpgvFNJYgMjOGGYj/\
etl5upu5iYJjwmMr5wmqw8x20vUFpSnk5hnuMb55P1oi0wkaly3NwrudmkIBf+\
TXwgQhuT89ik7dkS6BfGJaPvrKz+OXcDPL9tCy/\
F8XriML93DHkjmh6BWqXzWes6OUaqrrXRL7i6qPmy1SDPnzL1/9IBVXo1jGHbMGB+aGq8Xnur8C/\
bwoscu34h7vvGfHGOEnDdcKgE90nEBVtE0Ux54CTaPl2VG4fDuFPxHaLTp4IVTmDiLPvF9sfDCrzeF\
EKs3WwL0uH1DAggB+OKLbc7NKV6nBFJIgO8uK5fNtlU1KF43Nm+\
9pTH1AwwR8im5QnNfrJUd6Kj7OsfFbeSy5kmQ973uYYU5EbR38L6SEMuj6fCM5IQL2jq1ZvDKqkJkd\
6yH5QgYU44RUj6y3zsN/dwuRJI1Z5EdUnH4sCW5sQ/\
iX5Z4APgqc6aO7bn6PJuW8wmEMe16gKaJMvTZntM95tMN25oDnRfEnxL4j/Qu02h2xT+\
6qawsgd3a0K3JnRrQrcmdGvC/7sm2IjxX+k3d464Xg=="]]}; Typeset`initDone$$ = True), 
                DynamicModuleValues :> {}, Deinitialization :> None, 
                UntrackedVariables :> {Typeset`size$$}, 
                SynchronousInitialization -> True, 
                UnsavedVariables :> {Typeset`initDone$$}, 
                UndoTrackedVariables :> {
                 Typeset`show$$, Typeset`bookmarkMode$$}], "Manipulate", 
               Deployed -> True, StripOnInput -> False], TraditionalForm], 
             Manipulate`InterpretManipulate[1]], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod8$$, Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, 
   Typeset`pod12$$, Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, 
   Typeset`pod16$$, Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, 
   Typeset`pod20$$, Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, 
   Typeset`pod24$$, Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, 
   Typeset`pod28$$, Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, 
   Typeset`pod32$$, Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, 
   Typeset`pod36$$, Typeset`pod37$$, Typeset`aux1$$ = {
   False, False, {False}, True}, Typeset`aux2$$ = {
   False, False, {False}, True}, Typeset`aux3$$ = {
   True, False, {False, False, False, False, False}, True}, Typeset`aux4$$ = {
   False, False, {False}, True}, Typeset`aux5$$ = {
   False, False, {False}, True}, Typeset`aux6$$ = {
   False, False, {False}, True}, Typeset`aux7$$ = {
   False, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {True, False, {False}, True},
    Typeset`aux10$$ = {True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`aux12$$ = {
   True, False, {False}, True}, Typeset`aux13$$ = {
   True, False, {False}, True}, Typeset`aux14$$ = {
   True, False, {False}, True}, Typeset`aux15$$ = {
   True, False, {False}, True}, Typeset`aux16$$ = {
   True, False, {False}, True}, Typeset`aux17$$ = {
   True, False, {False}, True}, Typeset`aux18$$ = {
   True, False, {False}, True}, Typeset`aux19$$ = {
   True, False, {False}, True}, Typeset`aux20$$ = {
   True, False, {False}, True}, Typeset`aux21$$ = {
   True, False, {False}, True}, Typeset`aux22$$ = {
   True, False, {False}, True}, Typeset`aux23$$ = {
   True, False, {False}, True}, Typeset`aux24$$ = {
   True, False, {False}, True}, Typeset`aux25$$ = {
   True, False, {False}, True}, Typeset`aux26$$ = {
   True, False, {False}, True}, Typeset`aux27$$ = {
   True, False, {False}, True}, Typeset`aux28$$ = {
   True, False, {False}, True}, Typeset`aux29$$ = {
   True, False, {False}, True}, Typeset`aux30$$ = {
   True, False, {False}, True}, Typeset`aux31$$ = {
   True, False, {False}, True}, Typeset`aux32$$ = {
   True, False, {False}, True}, Typeset`aux33$$ = {
   True, False, {False}, True}, Typeset`aux34$$ = {
   True, False, {False}, True}, Typeset`aux35$$ = {
   True, False, {False}, True}, Typeset`aux36$$ = {
   True, False, {False}, True}, Typeset`aux37$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {{
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "7", "datatypes" -> "", "timedout" -> 
     "Reduce,Sequence,SetTheory", "timedoutpods" -> "", "timing" -> "5.425", 
     "parsetiming" -> "0.5680000000000001", "parsetimedout" -> "false", 
     "recalculate" -> 
     "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa1062412164iid8d0d3200004g81e64b660ghi184307842769377011871", "id" -> 
     "MSP1072412164iid8d0d320000246gh30chhe88bda", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "14", "related" -> 
     "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa1082412164iid8d0d3200003fdbbfd34icd504h4307842769377011871", "version" -> 
     "2.6", "inputstring" -> "DSolve[y'[x] == y[x]/(x + y[x]^4), y[x], x]"}, {
    "success" -> "true", "error" -> 
     "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve",
      "numpods" -> "1", "datatypes" -> "", "timedout" -> "", "timedoutpods" -> 
     "", "timing" -> "3.954", "parsetimedout" -> "false", "recalculate" -> "",
      "id" -> "", "parseidserver" -> "4", "host" -> 
     "https://www6b3.wolframalpha.com", "server" -> "4", "related" -> "", 
     "version" -> "2.6", "inputstring" -> 
     "DSolve[y'[x] == y[x]/(x + y[x]^4), y[x], x]"}}, 
   Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2024, 2, 25, 21, 4, 28.1131489`9.201484405614735}, "Line" -> 7,
     "SessionID" -> 20506953379246530184}, Typeset`showpods$$ = {1, 2, 3, 4, 
   5, 6, 7}, Typeset`failedpods$$ = {8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
    19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 
   37}, Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = 
   "DSolve[y'[x] == y[x]/(x + y[x]^4), y[x], x]"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
         Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
         Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
         Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
         Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
         Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
         Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
         Typeset`pod37$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
         Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
         Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
         Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
         Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
         Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
         Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
         Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
        Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
        Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
        Typeset`failedpods$$, Typeset`newq$$}]], StandardForm],
    ImageSizeCache->{1088., {1208.3544921875, 1213.6455078125}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; AlphaIntegration`DoAsyncInitialization[
       Hold[{
        2, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
          Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
          Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$, Typeset`pod12$$, 
          Typeset`pod13$$, Typeset`pod14$$, Typeset`pod15$$, Typeset`pod16$$, 
          Typeset`pod17$$, Typeset`pod18$$, Typeset`pod19$$, Typeset`pod20$$, 
          Typeset`pod21$$, Typeset`pod22$$, Typeset`pod23$$, Typeset`pod24$$, 
          Typeset`pod25$$, Typeset`pod26$$, Typeset`pod27$$, Typeset`pod28$$, 
          Typeset`pod29$$, Typeset`pod30$$, Typeset`pod31$$, Typeset`pod32$$, 
          Typeset`pod33$$, Typeset`pod34$$, Typeset`pod35$$, Typeset`pod36$$, 
          Typeset`pod37$$}, {
         Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
          Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
          Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$, Typeset`aux12$$, 
          Typeset`aux13$$, Typeset`aux14$$, Typeset`aux15$$, Typeset`aux16$$, 
          Typeset`aux17$$, Typeset`aux18$$, Typeset`aux19$$, Typeset`aux20$$, 
          Typeset`aux21$$, Typeset`aux22$$, Typeset`aux23$$, Typeset`aux24$$, 
          Typeset`aux25$$, Typeset`aux26$$, Typeset`aux27$$, Typeset`aux28$$, 
          Typeset`aux29$$, Typeset`aux30$$, Typeset`aux31$$, Typeset`aux32$$, 
          Typeset`aux33$$, Typeset`aux34$$, Typeset`aux35$$, Typeset`aux36$$, 
          Typeset`aux37$$}, Typeset`chosen$$, Typeset`open$$, 
         Typeset`elements$$, Typeset`q$$, Typeset`opts$$, Typeset`nonpods$$, 
         Typeset`queryinfo$$, Typeset`sessioninfo$$, Typeset`showpods$$, 
         Typeset`failedpods$$, Typeset`newq$$, 
         "https://www6b3.wolframalpha.com/api/v1/recalc.jsp?id=\
MSPa1062412164iid8d0d3200004g81e64b660ghi184307842769377011871", 
         Typeset`asyncpods$$}]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{
  3.9178550682741623`*^9, {3.9178579359321632`*^9, 
   3.9178579364957104`*^9}},ExpressionUUID->"6c5699a0-d825-4149-ac81-\
bfcaafd36ec7"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.9178572749881287`*^9, 
  3.9178572749921303`*^9}},ExpressionUUID->"3d90b614-4626-734d-ba2e-\
143361dbb602"]
},
RulerUnits->"Millimeters",
WindowSize->{1152, 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"Magnification"->1.,
"PaperOrientation"->"Portrait",
"PaperSize"->{595.2755905511812, 841.8897637795276},
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->28.346456999999997`},
TaggingRules-><|"TryRealOnly" -> False|>,
FrontEndVersion->"14.0 for Microsoft Windows (64-bit) (2023\:5e7412\:670812\
\:65e5)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"3e8ab15c-44ab-6749-a810-1ce9947aaf90"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 317, 4, 40, "WolframAlphaLong",ExpressionUUID->"e42f53fe-e5ae-7b4b-a303-c595a13de158"],
Cell[900, 28, 323532, 6336, 2432, "Print",ExpressionUUID->"6c5699a0-d825-4149-ac81-bfcaafd36ec7"]
}, Open  ]],
Cell[324447, 6367, 156, 3, 28, "Input",ExpressionUUID->"3d90b614-4626-734d-ba2e-143361dbb602"]
}
]
*)

